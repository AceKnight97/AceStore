{"version":3,"sources":["Helpers/auth.js","reportWebVitals.js","Constants/index.js","Utils/eventEmitter.js","Apollo/apolloClient.js","Helpers/customHooks.js","Components/UI/Supergraphic/index.js","Redux/Actions/login.js","Components/Inputs/InputTitle/index.js","Components/Inputs/DatepickerCT/index.js","Components/Inputs/InputCT/index.js","Utils/index.js","Components/Modals/ModalFooter/index.js","Components/Modals/ModalHeader/index.js","Components/Modals/AnyCustomerModal/index.js","Constants/home.js","Apollo/Functions/Fetch/fetchMenu.js","Components/Pages/Home/HomeBody/helper.js","Apollo/Fragments/user.js","Apollo/Functions/Handle/handleLogin.js","Helpers/index.js","Components/Modals/LoginModal/helper.js","Components/Modals/LoginModal/index.js","Apollo/Functions/Handle/handleRegister.js","Components/Modals/RegisterModal/helper.js","Components/Modals/RegisterModal/index.js","Components/Pages/Home/HomeHeader/index.js","Components/Tables/AntdTable/index.js","Components/UI/Loading/index.js","Apollo/Functions/Handle/handleCreateAnyCustomerOrder.js","Apollo/Functions/Handle/handleCreateOrder.js","Pages/FoodOrder/helper.js","Pages/FoodOrder/index.js","Utils/showNotification.js","Apollo/Fragments/food.js","Apollo/Fragments/foodOrder.js","Apollo/Functions/Subscribe/subscribeNewFoodOrders.js","Components/Inputs/RadioCT/index.js","Apollo/Functions/Handle/handeUpdateFoodOrderStatus.js","Components/Modals/FoodOrderDrawer/helper.js","Components/Modals/FoodOrderDrawer/index.js","Components/UI/DisplayStatus/index.js","Components/Tables/CustomerOrdersTable/index.js","Apollo/Functions/Fetch/fetchOrderHistory.js","Pages/CustomerOrders/helper.js","Pages/CustomerOrders/index.js","Pages/History/index.js","Images/Pages/Home/star.svg","Images/Pages/Home/star-inactive.svg","Components/Inputs/SelectCT/index.js","Components/UI/DisplayRating/index.js","Components/Pages/Home/FilterBlock/index.js","Components/Modals/FoodInfoModal/index.js","Components/Pages/Home/FoodCard/index.js","Components/Pages/Home/FoodTable/index.js","Components/Pages/Home/HomeTotal/index.js","Components/Pages/Home/HomeBody/index.js","Components/Pages/Home/HomeFooter/index.js","Pages/Home/index.js","Components/Modals/ConfirmModal/index.js","Apollo/Functions/Handle/handleChangePassword.js","Components/UI/ChangeUserPassword/helper.js","Components/UI/ChangeUserPassword/index.js","Components/UI/DisplayUserInfo/index.js","Apollo/Functions/Handle/handleUpdateUser.js","Components/UI/EditUserInfo/helper.js","Components/UI/EditUserInfo/index.js","Apollo/Functions/Handle/handleSendVerifyCode.js","Apollo/Functions/Handle/handleVerifiedEmail.js","Components/UI/VerifyAccount/helper.js","Components/UI/VerifyAccount/index.js","Components/UI/HandleUserUI/index.js","Components/Pages/User/AddFood/index.js","Apollo/Functions/Handle/handleAddFood.js","Apollo/Functions/Handle/handleDeleteFood.js","Apollo/Functions/Handle/handleUpdateFood.js","Pages/HandleChangeFood/helper.js","Pages/HandleChangeFood/index.js","Pages/User/index.js","Pages/main.js","Redux/Actions/reload.js","App.js","Redux/Reducers/initialState.js","Redux/Reducers/login.js","Redux/Reducers/index.js","Redux/Sagas/login.js","Redux/Sagas/index.js","Redux/Store/localStorage.js","Redux/Store/index.js","index.js"],"names":["localStorage","global","window","auth","login","data","console","log","user","isSuccess","token","JSON","stringify","role","getRole","setMenu","menu","getMenu","parse","setKindOfFood","kindOfFood","getKindOfFood","getToken","setFoodData","foodData","getFoodData","setMasterData","masterData","getMasterData","setDatalogin","getDataLogin","userId","username","userName","logout","clear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","APP_FLOW_ACTIONS","LOGIN_REQUEST","LOGIN_COMPLETE","GET_ALL_DATA_REQUEST","GET_ALL_DATA_COMPLETE","RELOAD_PAGE_REQUEST","LOGOUT_REQUEST","LOGOUT_COMPLETE","NEW_FOOD_ORDERS","CONFIG","MESSAGES","emitter","EventEmitter","httpLink","HttpLink","uri","credentials","wsLink","WebSocketLink","options","reconnect","terminatingLink","split","query","getMainDefinition","kind","operation","link","ApolloLink","from","cache","InMemoryCache","addTypename","defaultOptions","watchQuery","fetchPolicy","errorPolicy","createClient","a","isUsingCache","authLink","setContext","_","headers","ApolloClient","concat","onError","graphQLErrors","networkError","response","forward","map","message","extensions","errMes","includes","code","emit","error","undefined","name","version","packageJson","client","useMergeState","initialState","useState","state","setState","newState","prevState","expectedState","assign","useUpdateEffect","effect","dependencies","cleanup","isInitialMount","useRef","useEffect","current","Supergraphic","props","location","useLocation","history","useHistory","pathname","className","isAtHome","onClickHome","push","classnames","title","to","onClick","RightOutlined","renderLocationTitle","defaultProps","logoutRequest","type","AppFlowActions","InputTitle","DatepickerCT","disabledDateCT","placeholder","format","value","suffixIcon","disabledDate","disabled","onChange","date","moment","endOf","getPopupContainer","trigger","parentElement","isValid","InputCT","rows","inputClassName","maxLength","prefix","mask","decimalScale","allowLeadingZeros","allowedDecimalSeparators","thousandSeparator","mode","unitValue","onChangeUnit","suffix","autoComplete","supName","errMesClassName","absSuffix","allowNegative","titleClassName","isValueOutside","isSearchable","loadOptions","clearOptions","onInputChange","e","target","TextArea","onValueChange","Password","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","isValidEmail","email","re","test","String","trim","toLowerCase","ModalFooter","dangerTitle","danger","onClickDanger","loading","leftBtnClassName","onClickLeftBtn","leftTitle","onClickRightBtn","rightTitle","ModalHeader","ghost","btnClassName","btnTitle","CloseOutlined","DEFAULT_DATA","phone","address","notes","destination","usernameErr","phoneErr","addressErr","destinationErr","isConfirm","AnyCustomerModal","onClickCancel","key","onClickBack","destroyOnClose","footer","closable","centered","QUANTITY_TYPES","WEIGHT_DATA","PACKAGE_DATA","QUANTITY_TYPES_ADD_FOOD","STATUS_ENUM","MIN_MAX_PRICE","MENU","gql","fetchMenu","res","getFoodMasterData","titles","grouped","groupBy","x","Object","keys","forEach","calWeight","z","cartTags","quantity","slice","parseFloat","price","calPackage","calcCartTotal","total","sumBy","isBuy","handleFilterFood","filterObject","searchName","rating","minPrice","maxPrice","newFoodata","cloneDeep","filter","y","condition","isNil","length","USER","SIGN_IN","handleLogin","variables","mutate","mutation","result","signIn","getPrice","unit","text","temp","currencyFormatter","getOrderTotal","checkServerErr","formatPhone","mutationSignIn","password","checkValidLogin","passwordErr","LoginModal","resLogin","loginRequest","alert","SIGN_UP","handleRegister","signUp","handleRightBtnClick","confirmPassword","confirmPasswordErr","disabledRegister","mutationCreateUser","isStep1","RegisterModal","obj","emailErr","errObj","isEmpty","HomeHeader","visibleLogin","visibleRegister","onClickLogin","onClickRegister","isVerify","mapDispatchToProps","connect","AntdTable","columns","rowKey","totalData","onRowClick","dataSource","onRow","record","rowIndex","pagination","shouldHideNextButton","fetchData","sorter","shouldShowAllData","handleChangePage","isNoPagination","page","sticky","Loading","ADD_FOOD","handleCreateAnyCustomerOrder","createAnyCustomerOrder","CREATE_ORDER","handleCreateOrder","createOrder","arr","index","mutationCreateOrder","sendingData","food","id","status","input","createOrderForAnyCustomer","anyCustomerData","orders","customer","FoodOrder","anyCustomerVisible","orderAnyCustomer","setTimeout","onClickConfirm","dataIndex","render","cell","handleShowMes","FOOD","FOOD_ORDER","SubscribeNewFoodOrders","oldData","useSubscription","newFoodOrders","isEqual","duration","description","notification","destroy","clearTimeout","success","placement","showSuccessMsg","updateOrders","UndoOutlined","isShowBtn","RadioCT","textClass","radioItemClassName","isObj","itemMagrinTop","itemClassName","titleClass","indicator","LoadingOutlined","spin","Group","i","content","CHANGE_ORDER_STATUS","handeUpdateFoodOrderStatus","changeOrderStatus","mutationChangeStatus","orderId","FoodOrderDrawer","onClose","onUpdateFoodOrder","foodOrderId","onChangeStatus","width","closeIcon","maskClosable","isEditable","toggleClick","DisplayStatus","color","CustomerOrdersTable","foodOrderData","fetchHistory","isShow","ORDER_HISTORY","fetchOrderHistory","orderHistory","formatOrderHisData","foodOrder","getOrderHistory","addMore","order","createdAt","orderBy","valueOf","mutationGetFoodOrders","filterObj","currentDate","CustomerOrders","isAll","getFoodOrders","History","Option","Select","SelectCT","selectRef","showSearch","defaultValue","isObject","ref","label","optionFilterProp","blur","onSearch","filterOption","option","children","indexOf","DisplayRating","isButton","isDisabled","curNotAllowed","range","src","starIc","alt","starInactiveIc","FilterBlock","filterRef","onFilterFood","FoodInfoModal","image","onCancel","FoodCard","quantityType","visibleFoodInfo","onChangeCart","toggleIsBuy","toggleVisibleFoodInfo","FoodTable","toggleRef","debounceRef","el","findDOMNode","$","slideUp","item","slideToggle","HomeTotal","onClickBuy","onClickReset","block","HomeBody","arrImages","rawFoodData","fetchMenuData","newFoodData","find","cardTemp","HomeFooter","href","Home","ConfirmModal","leftBtnTitle","rightBtnTitle","icon","QuestionCircleOutlined","CHANGE_PASSWORD","handleChangePassword","changePassword","mutationChangePassword","newPassword","ChangeUserPassword","newPasswordErr","visibleChangePass","toggleClickChangePass","onClickChangePass","gender","dob","DisplayUserInfo","isVerified","onClickVerifyAccount","onClickChangeInfo","UPDATE_USER","handleUpdateUser","updateUser","mutationUpdateUser","toISOString","profileInput","EditUserInfo","originalData","RESEND_VERIFIED_EMAIL","handleSendVerifyCode","resendVerifiedEmail","VERIFIED_EMAIL","handleVerifiedEmail","verifiedEmail","mutationVerifiedEmail","verificationCode","mutationSendCode","VerifyAccount","verifycationCode","invalidCode","countingTime","visibleSendCode","onClickSendCode","toggleClickSendCode","onClickVerify","autoFocus","values","fieldWidth","fieldHeight","fields","HandleUserUI","renderView","nameErr","priceErr","titleErr","quanityTypeErr","displayingName","AddFood","menuRef","onChangeFood","onDeleteFood","inputId","isAdd","isDelete","setIem","onChangeImg","event","file","files","reader","FileReader","readAsDataURL","onloadend","img","onClickImg","document","getElementById","click","FileImageTwoTone","accept","handleAddFood","addFood","DELETE_FOOD","handleDeleteFood","deleteFood","UPDATE_FOOD","handleUpdateFood","updateFood","formatFood","handleMutationAddFood","isEdit","func","HandleChangeFood","foodList","splice","onClickAddFood","isDisabledBtn","checkDisabledFoodList","TabPane","Tabs","EDIT_FOOD","USER_PROFILE","User","activeTab","isAdmin","activeKey","tabPosition","tab","Main","onbeforeunload","onload","reloadPageRequest","callback","deps","loginRequestListener","useCallback","listener","addListener","remove","exact","path","component","isLoading","PropTypes","isRequired","App","Component","bookings","checkins","foodMasterData","action","appReducer","combineReducers","rootReducer","loginFlow","INFINITE","take","request","put","fork","root","persistedState","serializedState","getItem","err","loadState","store","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","runSaga","run","rootSaga","configureStore","sessionService","initSessionService","ReactDOM","ApolloProvider"],"mappings":"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","file":"static/js/main.ed5ea4b8.chunk.js","sourcesContent":["const { localStorage } = global.window;\r\n\r\nconst auth = {\r\n  login(data) {\r\n    console.log(\"login data: \", data);\r\n    const { user, isSuccess, token } = data;\r\n\r\n    localStorage.isSuccess = isSuccess;\r\n    localStorage.token = token;\r\n    localStorage.user = JSON.stringify(user);\r\n    localStorage.role = user.role;\r\n  },\r\n\r\n  getRole() {\r\n    return localStorage.role;\r\n  },\r\n\r\n  setMenu(data) {\r\n    localStorage.menu = JSON.stringify(data);\r\n  },\r\n\r\n  getMenu() {\r\n    return localStorage.menu && localStorage.menu !== \"undefined\"\r\n      ? JSON.parse(localStorage.menu)\r\n      : [];\r\n  },\r\n\r\n  setKindOfFood(data) {\r\n    localStorage.kindOfFood = JSON.stringify(data);\r\n  },\r\n\r\n  getKindOfFood() {\r\n    return localStorage.kindOfFood && localStorage.kindOfFood !== \"undefined\"\r\n      ? JSON.parse(localStorage.kindOfFood)\r\n      : [];\r\n  },\r\n  getToken() {\r\n    return localStorage.token;\r\n  },\r\n\r\n  setFoodData(data) {\r\n    localStorage.foodData = JSON.stringify(data);\r\n  },\r\n\r\n  getFoodData() {\r\n    return localStorage.foodData && localStorage.foodData !== \"undefined\"\r\n      ? JSON.parse(localStorage.foodData)\r\n      : [];\r\n  },\r\n\r\n  setMasterData(data) {\r\n    localStorage.masterData = JSON.stringify(data);\r\n  },\r\n\r\n  getMasterData() {\r\n    return localStorage.masterData && localStorage.masterData !== \"undefined\"\r\n      ? JSON.parse(localStorage.masterData)\r\n      : [];\r\n  },\r\n\r\n  setDatalogin(data) {\r\n    // data = user\r\n    localStorage.login = JSON.stringify(data);\r\n  },\r\n\r\n  getDataLogin() {\r\n    return localStorage.login && localStorage.login !== \"undefined\"\r\n      ? JSON.parse(localStorage.login)\r\n      : {};\r\n  },\r\n\r\n  isSuccess() {\r\n    return localStorage.isSuccess;\r\n  },\r\n\r\n  userId() {\r\n    return localStorage.userId;\r\n  },\r\n\r\n  username() {\r\n    return localStorage.userName;\r\n  },\r\n\r\n  role() {\r\n    return localStorage.role; // || 'MD'; // || 'NURSE';\r\n  },\r\n\r\n  logout() {\r\n    localStorage.clear();\r\n  },\r\n};\r\n\r\nexport default auth;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const APP_FLOW_ACTIONS = {\r\n  LOGIN_REQUEST: \"LOGIN_REQUEST\",\r\n  LOGIN_COMPLETE: \"LOGIN_COMPLETE\",\r\n\r\n  GET_ALL_DATA_REQUEST: \"GET_ALL_DATA_REQUEST\",\r\n  GET_ALL_DATA_COMPLETE: \"GET_ALL_DATA_COMPLETE\",\r\n\r\n  RELOAD_PAGE_REQUEST: \"RELOAD_PAGE_REQUEST\",\r\n\r\n  LOGOUT_REQUEST: \"LOGOUT_REQUEST\",\r\n  LOGOUT_COMPLETE: \"LOGOUT_COMPLETE\",\r\n\r\n  NEW_FOOD_ORDERS: \"NEW_FOOD_ORDERS\",\r\n};\r\nexport default APP_FLOW_ACTIONS;\r\n\r\nexport const PAGE_MANAGER = {\r\n  HOME_PAGE: \"https://github.com/AceKnight97/staticpromotionalwebsite\",\r\n  HOME: \"/acestore\",\r\n  OUR_TEAM: \"/our-team\",\r\n  MY_CV: \"/staticpromotionalwebsite\",\r\n  BUSINESS: \"/business\",\r\n  CONTACT: \"/contact\",\r\n  LIGHT_NOVEL: \"/light-novel\",\r\n};\r\nexport const CONFIG = {\r\n  APOLLO_HOST_URL: \"retail-store-java.herokuapp.com/graphql\",\r\n  // APOLLO_HOST_URL: \"localhost:8080/graphql\",\r\n};\r\n\r\nexport const MESSAGES = {\r\n  EXPIRED_TOKEN: \"Your login session has expired, please login again.\",\r\n};\r\n\r\nexport const EMITTER_CONSTANTS = {\r\n  CONNECT: \"\",\r\n  TEST: \"\",\r\n  NEW_CARE_PLAN: \"NEW_CARE_PLAN\",\r\n};\r\n","import { EventEmitter } from 'fbemitter';\r\n\r\nconst emitter = new EventEmitter();\r\n\r\nexport default emitter;\r\n","import {\r\n  ApolloClient,\r\n  ApolloLink,\r\n  HttpLink,\r\n  InMemoryCache,\r\n  split,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\r\nimport { getMainDefinition } from \"@apollo/client/utilities\";\r\nimport packageJson from \"../../package.json\";\r\n// import CONFIG from '../Config';\r\nimport APP_FLOW_ACTIONS, { CONFIG } from \"../Constants\";\r\nimport auth from \"../Helpers/auth\";\r\nimport emitter from \"../Utils/eventEmitter\";\r\n\r\nconst httpLink = new HttpLink({\r\n  uri: `http://${CONFIG.APOLLO_HOST_URL}`,\r\n  credentials: \"same-origin\",\r\n});\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: `wss://${CONFIG.APOLLO_HOST_URL}`,\r\n  // uri: CONFIG.APOLLO_HOST_URL,\r\n  options: {\r\n    reconnect: true,\r\n  },\r\n});\r\n\r\nconst terminatingLink = split(\r\n  ({ query }) => {\r\n    const { kind, operation } = getMainDefinition(query);\r\n    return kind === \"OperationDefinition\" && operation === \"subscription\";\r\n  },\r\n  wsLink,\r\n  httpLink\r\n);\r\n\r\nconst link = ApolloLink.from([terminatingLink]);\r\n\r\nconst cache = new InMemoryCache({ addTypename: false });\r\n\r\nconst defaultOptions = {\r\n  watchQuery: {\r\n    fetchPolicy: \"no-cache\",\r\n    errorPolicy: \"ignore\",\r\n  },\r\n  query: {\r\n    fetchPolicy: \"no-cache\",\r\n    errorPolicy: \"all\",\r\n  },\r\n};\r\n\r\nconst createClient = async (\r\n  isUsingCache = false,\r\n  isNotShowDisconnect = false\r\n) => {\r\n  try {\r\n    const token = auth.getToken();\r\n    // console.log({ token });\r\n    const authLink = setContext((_, { headers }) => ({\r\n      headers: {\r\n        ...headers,\r\n        \"access-token\": token,\r\n      },\r\n    }));\r\n    return new ApolloClient({\r\n      link: authLink.concat(\r\n        ApolloLink.from([\r\n          onError(\r\n            ({ graphQLErrors, networkError, response, operation, forward }) => {\r\n              if (graphQLErrors) {\r\n                _.map(graphQLErrors, ({ message, extensions }) => {\r\n                  console.log({ errMes: message });\r\n                  if (\r\n                    _.includes(message, \"403\") ||\r\n                    _.includes(message, \"400\") ||\r\n                    extensions.code === \"UNAUTHENTICATED\"\r\n                  ) {\r\n                    emitter.emit(APP_FLOW_ACTIONS.LOGOUT_REQUEST);\r\n                  }\r\n                });\r\n              } else if (networkError) {\r\n                console.error(`[Network error]: ${networkError}`);\r\n                // if (!isNotShowDisconnect) {\r\n                // openPopupDisconnect();\r\n                // }\r\n                throw networkError;\r\n              }\r\n            }\r\n          ),\r\n          httpLink,\r\n        ])\r\n      ),\r\n      cache,\r\n      defaultOptions: isUsingCache ? undefined : defaultOptions,\r\n      name: \"web\",\r\n      version: packageJson.version,\r\n    });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const client = new ApolloClient({\r\n  link,\r\n  cache,\r\n  defaultOptions,\r\n});\r\n\r\nexport default createClient;\r\n","import _ from \"lodash\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport emitter from \"../Utils/eventEmitter\";\r\n\r\nexport const useMergeState = (initialState) => {\r\n  const [state, setState] = useState(initialState);\r\n  const setMergedState = (newState) =>\r\n    setState((prevState) => {\r\n      const expectedState = _.assign(prevState, newState);\r\n      return { ...expectedState };\r\n    });\r\n  return [state, setMergedState];\r\n};\r\n\r\nexport const useUpdateEffect = (effect, dependencies = [], cleanup) => {\r\n  const isInitialMount = useRef(true);\r\n  useEffect(() => {\r\n    if (isInitialMount.current) {\r\n      isInitialMount.current = false;\r\n    } else {\r\n      effect();\r\n    }\r\n    return cleanup;\r\n  }, dependencies);\r\n};\r\n\r\nexport const useEmitter = (key, callback, deps) => {\r\n  useEffect(() => {\r\n    if (!(key && callback)) {\r\n      return;\r\n    }\r\n    const listener = emitter.addListener(key, callback);\r\n    return () => {\r\n      listener.remove();\r\n    };\r\n  }, [key, ...deps]);\r\n  return emitter;\r\n};\r\n","// import boschLogo from \"../../../Images/bosch-logo-new-flat.png\";\r\nimport { RightOutlined } from \"@ant-design/icons\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport { NavLink, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useMergeState } from \"../../../Helpers/customHooks\";\r\nimport \"./_supergraphic.scss\";\r\n\r\nconst Supergraphic = (props) => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const { pathname } = location;\r\n  const [state, setState] = useMergeState({});\r\n  const { className } = props;\r\n  // useEffect(() => {}, []);\r\n  const isAtHome = pathname.includes(\"/acestore\");\r\n\r\n  const onClickHome = () => {\r\n    if (isAtHome) {\r\n      return;\r\n    }\r\n    history.push(\"/acestore\");\r\n  };\r\n\r\n  const renderLocationTitle = () => {\r\n    // console.log({ location });\r\n    let title = \"\";\r\n    switch (pathname) {\r\n      case \"/food-order\":\r\n        title = \"Food Order\";\r\n        break;\r\n      case \"/history\":\r\n        title = \"Order History\";\r\n        break;\r\n      case \"/user\":\r\n        title = \"User\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return (\r\n      <div className=\"bosch-header-title\">\r\n        <NavLink\r\n          to=\"/acestore\"\r\n          onClick={onClickHome}\r\n          // className={isAtHome ? \"cur-not-allowed\" : \"\"}\r\n        >\r\n          Home\r\n        </NavLink>\r\n        {title ? (\r\n          <>\r\n            <RightOutlined />\r\n            <span>{title}</span>\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classnames(\"supergraphic\", className)}></div>\r\n      <div className=\"bosch-header\">\r\n        <div className=\"flex\">\r\n          {/* <img\r\n            src={boschLogo}\r\n            alt=\"Bosch ic\"\r\n            className=\"bosch-header-logo\"\r\n          ></img> */}\r\n          {/* <div className=\"supergraphic-title\">\r\n            Acestore\r\n          </div> */}\r\n          {renderLocationTitle()}\r\n        </div>\r\n        <div className=\"bosch-header-group\">Acestore</div>\r\n      </div>\r\n      {!isAtHome && (\r\n        <NavLink to=\"/acestore\" className=\"not-home-back-btn\">\r\n          Go back\r\n        </NavLink>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nSupergraphic.defaultProps = {\r\n  className: \"\",\r\n};\r\nSupergraphic.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Supergraphic;\r\n","import AppFlowActions from \"../../Constants\";\r\n\r\n/**\r\n *\r\n * @param {*} data\r\n */\r\nexport function loginRequest(data) {\r\n  return { type: AppFlowActions.LOGIN_REQUEST, data };\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} data\r\n */\r\nexport function logoutRequest(data) {\r\n  return { type: AppFlowActions.LOGOUT_REQUEST, data };\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst InputTitle = (props) => {\r\n  const { className, title } = props;\r\n  if (title) {\r\n    return (\r\n      <div className={classnames('input-title-wrapper', className)}>\r\n        <span>{title}</span>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\nInputTitle.defaultProps = {\r\n  className: '',\r\n  title: '',\r\n};\r\nInputTitle.propTypes = {\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default InputTitle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DatePicker, TimePicker } from 'antd';\r\nimport classnames from 'classnames';\r\nimport moment from 'moment';\r\n\r\nimport InputTitle from '../InputTitle';\r\n\r\nconst DatepickerCT = (props) => {\r\n  const {\r\n    className, title, placeholder, format, value, name, suffixIcon, type,\r\n    disabledDate, disabled,\r\n  } = props;\r\n\r\n  const onChange = (date) => {\r\n    props.onChange(name, date);\r\n  };\r\n\r\n  let disabledDateCT;\r\n  switch (disabledDate) {\r\n    case 'PAST': {\r\n      disabledDateCT = (current) => current > moment().endOf('day');\r\n      break;\r\n    }\r\n    case 'FUTURE': {\r\n      disabledDateCT = (current) => current <= moment().endOf('day');\r\n      break;\r\n    }\r\n    default: {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classnames('datepicker-ct-wrapper', className)}>\r\n      <InputTitle title={title} />\r\n\r\n      {\r\n        type === 'TIME'\r\n          ? (\r\n            <TimePicker\r\n              disabled={disabled}\r\n              getPopupContainer={(trigger) => trigger.parentElement}\r\n              // inputReadOnly\r\n              suffixIcon={suffixIcon}\r\n              placeholder={placeholder}\r\n              onChange={onChange}\r\n              format={format}\r\n              value={typeof (value) === 'string' && moment(value).isValid() ? moment(value) : value || undefined}\r\n              disabledDate={disabledDateCT}\r\n            />\r\n          ) : (\r\n            <DatePicker\r\n              disabled={disabled}\r\n              getPopupContainer={(trigger) => trigger.parentElement}\r\n              // inputReadOnly\r\n              suffixIcon={suffixIcon}\r\n              placeholder={placeholder}\r\n              onChange={onChange}\r\n              format={format}\r\n              value={typeof (value) === 'string' && moment(value).isValid() ? moment(value) : value || undefined}\r\n              disabledDate={disabledDateCT}\r\n            />\r\n          )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nDatepickerCT.defaultProps = {\r\n  className: undefined,\r\n  format: 'MM/DD/YYYY',\r\n  title: '',\r\n  placeholder: 'Select date',\r\n  onChange: () => { },\r\n  value: undefined,\r\n  name: '',\r\n  disabledDate: undefined,\r\n  suffixIcon: undefined,\r\n  type: 'DATE',\r\n  disabled: false,\r\n};\r\n\r\nDatepickerCT.propTypes = {\r\n  className: PropTypes.string,\r\n  format: PropTypes.string,\r\n  title: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.oneOfType([PropTypes.shape(), PropTypes.string]),\r\n  name: PropTypes.string,\r\n  disabledDate: PropTypes.string,\r\n  suffixIcon: PropTypes.shape(),\r\n  type: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default DatepickerCT;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Input } from \"antd\";\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport classnames from \"classnames\";\r\n\r\nimport InputTitle from \"../InputTitle\";\r\nimport DatepickerCT from \"../DatepickerCT\";\r\n\r\nconst InputCT = (props) => {\r\n  const {\r\n    className,\r\n    type,\r\n    rows,\r\n    placeholder,\r\n    title,\r\n    disabled,\r\n    value,\r\n    inputClassName,\r\n    maxLength,\r\n    prefix,\r\n    mask,\r\n    format,\r\n    decimalScale,\r\n    name,\r\n    allowedDecimalSeparators,\r\n    allowLeadingZeros,\r\n    thousandSeparator,\r\n    data,\r\n    mode,\r\n    unitValue,\r\n    onChangeUnit,\r\n    disabledDate,\r\n    suffix,\r\n    autoComplete,\r\n    supName,\r\n    errMes,\r\n    errMesClassName,\r\n    absSuffix,\r\n    allowNegative,\r\n    isValueOutside,\r\n    isSearchable,\r\n    loadOptions,\r\n    options,\r\n    clearOptions,\r\n    onInputChange, // for Async\r\n    titleClassName,\r\n  } = props;\r\n\r\n  const onChange = (e) => {\r\n    props.onChange(name, e.target.value);\r\n  };\r\n\r\n  const onValueChange = ({ value }) => {\r\n    props.onChange(name, value);\r\n  };\r\n\r\n  return (\r\n    <div className={classnames(\"input-ct-wrapper\", className)}>\r\n      <InputTitle title={title} className={titleClassName} />\r\n\r\n      {type === \"TEXTAREA\" ? (\r\n        <Input.TextArea\r\n          value={value}\r\n          disabled={disabled}\r\n          placeholder={placeholder}\r\n          rows={rows}\r\n          onChange={onChange}\r\n        />\r\n      ) : null}\r\n\r\n      {type === \"NUMBER\" ? (\r\n        <NumberFormat\r\n          mask={mask}\r\n          format={format}\r\n          value={value}\r\n          className={classnames(\r\n            \"basic-number-format\",\r\n            inputClassName,\r\n            errMes ? \"err-border\" : \"\"\r\n          )}\r\n          disabled={disabled}\r\n          onValueChange={onValueChange}\r\n          placeholder={placeholder}\r\n          maxLength={maxLength}\r\n          decimalScale={decimalScale}\r\n          prefix={prefix}\r\n          suffix={suffix}\r\n          allowNegative={allowNegative}\r\n          // allowedDecimalSeparators={allowedDecimalSeparators}\r\n          // allowNegative={false}\r\n          allowLeadingZeros={allowLeadingZeros}\r\n          // thousandSeparator={thousandSeparator}\r\n          // inputMode=\"numeric\"\r\n          // prefix={prefix}\r\n        />\r\n      ) : null}\r\n\r\n      {type === \"DATE\" ? (\r\n        <DatepickerCT\r\n          name={name}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={props.onChange}\r\n          disabledDate={disabledDate}\r\n          suffixIcon={suffix}\r\n        />\r\n      ) : null}\r\n\r\n      {type === \"text\" ? (\r\n        <Input\r\n          className={errMes ? \"err-border\" : \"\"}\r\n          value={value}\r\n          disabled={disabled}\r\n          placeholder={placeholder}\r\n          onChange={onChange}\r\n          prefix={prefix}\r\n          suffix={suffix}\r\n        />\r\n      ) : null}\r\n\r\n      {type === \"PASSWORD\" ? (\r\n        <Input.Password\r\n          className={errMes ? \"err-border\" : \"\"}\r\n          value={value}\r\n          disabled={disabled}\r\n          placeholder={placeholder}\r\n          onChange={onChange}\r\n          iconRender={(visible) =>\r\n            visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n          }\r\n          autoComplete={autoComplete}\r\n        />\r\n      ) : null}\r\n\r\n      {errMes ? (\r\n        <div className={classnames(\"div-incorrect-mes\", errMesClassName)}>\r\n          <span>{errMes}</span>\r\n        </div>\r\n      ) : null}\r\n\r\n      {absSuffix && (\r\n        <div className=\"abs-suffix-ct\">\r\n          <span>{absSuffix}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nInputCT.defaultProps = {\r\n  className: undefined,\r\n  titleClassName: \"\",\r\n  rows: 4,\r\n  type: \"text\",\r\n  title: \"\",\r\n  placeholder: \"Enter...\",\r\n  onChange: () => {},\r\n  onChangeUnit: () => {},\r\n  disabled: false,\r\n  value: undefined,\r\n  inputClassName: \"\",\r\n  maxLength: 20,\r\n  allowedDecimalSeparators: undefined,\r\n  decimalScale: undefined,\r\n  allowLeadingZeros: false,\r\n  thousandSeparator: false,\r\n  prefix: undefined,\r\n  suffix: undefined,\r\n  mask: undefined,\r\n  format: undefined,\r\n  name: \"\",\r\n  supName: \"\",\r\n  data: [],\r\n  mode: undefined, // 'tags', // or multiple\r\n  unitValue: \"\",\r\n  disabledDate: undefined,\r\n  autoComplete: \"\",\r\n  errMes: \"\",\r\n  errMesClassName: \"\",\r\n  absSuffix: \"\",\r\n  allowNegative: false,\r\n  isValueOutside: false,\r\n  isSearchable: false,\r\n  loadOptions: () => {},\r\n  options: [],\r\n  clearOptions: () => {},\r\n  onInputChange: () => {},\r\n};\r\n\r\nInputCT.propTypes = {\r\n  className: PropTypes.string,\r\n  titleClassName: PropTypes.string,\r\n  rows: PropTypes.number,\r\n  type: PropTypes.string,\r\n  title: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onChangeUnit: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.arrayOf([PropTypes.string]),\r\n    PropTypes.number,\r\n    PropTypes.shape(),\r\n  ]),\r\n  inputClassName: PropTypes.string,\r\n  maxLength: PropTypes.number,\r\n  allowedDecimalSeparators: PropTypes.bool,\r\n  decimalScale: PropTypes.number,\r\n  allowLeadingZeros: PropTypes.bool,\r\n  thousandSeparator: PropTypes.bool,\r\n  prefix: PropTypes.string,\r\n  suffix: PropTypes.oneOfType([PropTypes.string, PropTypes.shape()]),\r\n  mask: PropTypes.string,\r\n  format: PropTypes.string,\r\n  name: PropTypes.string,\r\n  supName: PropTypes.string,\r\n  data: PropTypes.arrayOf(PropTypes.string),\r\n  mode: PropTypes.string,\r\n  unitValue: PropTypes.string,\r\n  disabledDate: PropTypes.string,\r\n  autoComplete: PropTypes.string,\r\n  errMes: PropTypes.string,\r\n  errMesClassName: PropTypes.string,\r\n  absSuffix: PropTypes.string,\r\n  allowNegative: PropTypes.bool,\r\n  isValueOutside: PropTypes.bool,\r\n  isSearchable: PropTypes.bool,\r\n  loadOptions: PropTypes.func,\r\n  options: PropTypes.arrayOf(PropTypes.shape()),\r\n  clearOptions: PropTypes.func,\r\n  onInputChange: PropTypes.func,\r\n};\r\n\r\nexport default InputCT;\r\n","\r\nimport { notification } from 'antd';\r\nimport moment from 'moment';\r\n\r\nexport const getFullName = (x = {}) => `${x.firstName || ''} ${x.lastName || ''}`;\r\n\r\nexport const isValidEmail = (email = '') => {\r\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email.trim()).toLowerCase());\r\n};\r\n\r\nexport const toggleArr = (item = '', arr = []) => {\r\n  const array = [...arr]; // make a separate copy of the array\r\n  const index = array.indexOf(item);\r\n  if (index !== -1) {\r\n    array.splice(index, 1);\r\n    return array;\r\n  }\r\n  array.push(item);\r\n  return array;\r\n};\r\n\r\nexport const normalizeString = (str = '') => {\r\n  if (str) {\r\n    return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\r\n  }\r\n  return '';\r\n};\r\n\r\nlet handleShowMes;\r\n\r\nexport const showFailedMsg = (message = '', description = undefined, className = '') => {\r\n  if (handleShowMes) {\r\n    clearTimeout(handleShowMes);\r\n  }\r\n  handleShowMes = setTimeout(() => {\r\n    notification.error({\r\n      message,\r\n      description,\r\n      placement: 'bottomLeft',\r\n      duration: 3,\r\n      className,\r\n    });\r\n  }, 300);\r\n};\r\n\r\nexport const showSuccessMsg = (message = '', description = undefined, className = '') => {\r\n  if (handleShowMes) {\r\n    clearTimeout(handleShowMes);\r\n  }\r\n  handleShowMes = setTimeout(() => {\r\n    notification.success({\r\n      message,\r\n      description,\r\n      placement: 'bottomLeft',\r\n      duration: 3,\r\n      className,\r\n    });\r\n  }, 300);\r\n};\r\n\r\nexport const showWarningMsg = (message = '', description = undefined, className = '') => {\r\n  if (handleShowMes) {\r\n    clearTimeout(handleShowMes);\r\n  }\r\n  handleShowMes = setTimeout(() => {\r\n    notification.warning({\r\n      message,\r\n      description,\r\n      placement: 'bottomLeft',\r\n      duration: 3,\r\n      className,\r\n    });\r\n  }, 300);\r\n};\r\n\r\nexport const mutateDate = (date = undefined) => {\r\n  if (!date) {\r\n    return undefined;\r\n  }\r\n  return moment(date).isValid() ? moment(date).format('YYYY-MM-DD') : undefined;\r\n};\r\n\r\nexport const mutateDateTime = (dateTime = undefined) => {\r\n  if (!dateTime) {\r\n    return undefined;\r\n  }\r\n  return moment(dateTime).isValid() ? moment(dateTime).toISOString() : undefined;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\nimport classnames from 'classnames';\r\n\r\nconst ModalFooter = props => (\r\n  <div className={classnames('modal-footer-wrapper', props.className)}>\r\n\r\n    {\r\n      props.dangerTitle ? (\r\n        <Button\r\n          danger\r\n          className={props.dangerTitle}\r\n          onClick={props.onClickDanger}\r\n          disabled={props.loading}\r\n        >\r\n          {props.dangerTitle}\r\n        </Button>\r\n      ) : <div />\r\n    }\r\n\r\n    <div className=\"modal-footer-buttons\">\r\n      <Button className={props.leftBtnClassName} onClick={props.onClickLeftBtn} disabled={props.loading}>\r\n        {props.leftTitle}\r\n      </Button>\r\n\r\n      <Button type=\"primary\" onClick={props.onClickRightBtn} disabled={props.disabled} loading={props.loading}>\r\n        {props.rightTitle}\r\n      </Button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nModalFooter.defaultProps = {\r\n  className: undefined,\r\n  disabled: false,\r\n  loading: false,\r\n  leftBtnClassName: 'mr8',\r\n  dangerTitle: '',\r\n  onClickDanger: () => {},\r\n};\r\n\r\nModalFooter.propTypes = {\r\n  className: PropTypes.string,\r\n  leftTitle: PropTypes.string.isRequired,\r\n  rightTitle: PropTypes.string.isRequired,\r\n  onClickRightBtn: PropTypes.func.isRequired,\r\n  onClickLeftBtn: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool,\r\n  loading: PropTypes.bool,\r\n  leftBtnClassName: PropTypes.string,\r\n  dangerTitle: PropTypes.string,\r\n  onClickDanger: PropTypes.func,\r\n};\r\n\r\nexport default ModalFooter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport classnames from 'classnames';\r\n\r\nconst ModalHeader = props => (\r\n  <div className={classnames('modal-header-wrapper', props.className)}>\r\n    <div className=\"modal-header-title\">\r\n      <span>{props.title}</span>\r\n    </div>\r\n\r\n    <Button ghost onClick={props.onClick} className={props.btnClassName} disabled={props.loading} className='modal-header-close-btn'>\r\n      {props.btnTitle || <CloseOutlined />}\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nModalHeader.defaultProps = {\r\n  className: undefined,\r\n  btnClassName: undefined,\r\n  btnTitle: '',\r\n  loading: false,\r\n  onClick: () => { },\r\n};\r\n\r\nModalHeader.propTypes = {\r\n  className: PropTypes.string,\r\n  btnClassName: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  btnTitle: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default ModalHeader;\r\n","import { Modal } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useMergeState } from \"../../../Helpers/customHooks\";\r\nimport { isValidEmail } from \"../../../Utils\";\r\nimport InputCT from \"../../Inputs/InputCT\";\r\nimport ModalFooter from \"../ModalFooter\";\r\nimport ModalHeader from \"../ModalHeader\";\r\nimport \"./_any-customer-modal.scss\";\r\n\r\nconst MY_DATA = {\r\n  email: \"\",\r\n  username: \"\",\r\n  phone: \"\",\r\n  address: \"\",\r\n  notes: \"\",\r\n};\r\n\r\nconst DEFAULT_DATA = {\r\n  email: \"\",\r\n  username: \"\",\r\n  phone: \"\",\r\n  address: \"\",\r\n  notes: \"\",\r\n  destination: \"\",\r\n\r\n  usernameErr: \"\",\r\n  phoneErr: \"\",\r\n  addressErr: \"\",\r\n  destinationErr: \"\",\r\n  loading: false,\r\n  isConfirm: false,\r\n};\r\n\r\nconst AnyCustomerModal = (props) => {\r\n  const [state, setState] = useMergeState({\r\n    ...DEFAULT_DATA,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      setState({ ...DEFAULT_DATA });\r\n    }\r\n  }, [props.visible]);\r\n\r\n  const { className, visible, onClickCancel, onClick } = props;\r\n  const {\r\n    email,\r\n    username,\r\n    usernameErr,\r\n    loading,\r\n    phone,\r\n    address,\r\n    notes,\r\n    destination,\r\n    phoneErr,\r\n    addressErr,\r\n    destinationErr,\r\n    isConfirm,\r\n  } = state;\r\n\r\n  const onChange = (key, value) => {\r\n    setState({\r\n      [key]: value,\r\n      usernameErr: \"\",\r\n      destinationErr: \"\",\r\n      phoneErr: \"\",\r\n      addressErr: \"\",\r\n    });\r\n  };\r\n\r\n  const onClickRightBtn = async () => {\r\n    if (isConfirm) {\r\n      onClick(state);\r\n    } else {\r\n      setState({ isConfirm: true });\r\n    }\r\n  };\r\n  const onClickBack = async () => {\r\n    setState({ isConfirm: false });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"any-customer-modal\"\r\n      destroyOnClose\r\n      visible={visible}\r\n      footer={null}\r\n      closable={false}\r\n      centered\r\n    >\r\n      <div className={classnames(\"any-customer-modal-wrapper\", className)}>\r\n        <ModalHeader title=\"Customer info\" onClick={onClickCancel} />\r\n\r\n        {isConfirm ? (\r\n          <div className=\"any-customer-modal-main\">\r\n            <div className=\"font-20 b\">Your information:</div>\r\n            <div className=\"fr-sb mt-16\">\r\n              <span className=\"b\">Email:</span>\r\n              <span className=\"ml-4\">{email}</span>\r\n            </div>\r\n            <div className=\"fr-sb\">\r\n              <span className=\"b\">Username:</span>\r\n              <span className=\"ml-4\">{username}</span>\r\n            </div>\r\n            <div className=\"fr-sb\">\r\n              <span className=\"b\">Delivery:</span>\r\n              <span className=\"ml-4\">{address}</span>\r\n            </div>\r\n            <div className=\"fr-sb\">\r\n              <span className=\"b\">Phone number:</span>\r\n              <span className=\"ml-4\">{phone}</span>\r\n            </div>\r\n            <div className=\"fr-sb\">\r\n              <span className=\"b\">Notes:</span>\r\n              <span className=\"ml-4\">{notes}</span>\r\n            </div>\r\n            <div className=\"fr-sb\">\r\n              <span className=\"b\">Destination:</span>\r\n              <span className=\"ml-4\">{destination}</span>\r\n            </div>\r\n\r\n            <div className=\"fcen mt-16 b\">Do you want to order now?</div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"any-customer-modal-main\">\r\n            <InputCT\r\n              title=\"Email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={onChange}\r\n              placeholder=\"Enter your email\"\r\n              errMes={isValidEmail(email) ? \"\" : \"Invalid email!\"}\r\n            />\r\n            <InputCT\r\n              title=\"Username\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={onChange}\r\n              placeholder=\"Enter your username\"\r\n              className=\"mt-16\"\r\n              errMes={usernameErr}\r\n            />\r\n            <InputCT\r\n              title=\"Address\"\r\n              name=\"address\"\r\n              value={address}\r\n              onChange={onChange}\r\n              placeholder=\"Enter your address\"\r\n              className=\"mt-16\"\r\n              errMes={addressErr}\r\n            />\r\n            <InputCT\r\n              title=\"Phone number\"\r\n              name=\"phone\"\r\n              value={phone}\r\n              onChange={onChange}\r\n              placeholder=\"Enter your phone number\"\r\n              className=\"mt-16\"\r\n              errMes={phoneErr}\r\n              type=\"NUMBER\"\r\n              allowLeadingZeros\r\n            />\r\n            <InputCT\r\n              title=\"Destination\"\r\n              name=\"destination\"\r\n              value={destination}\r\n              onChange={onChange}\r\n              placeholder=\"Enter destination\"\r\n              errMes={destinationErr}\r\n              className=\"mt-16\"\r\n            />\r\n            <InputCT\r\n              title=\"Notes\"\r\n              name=\"notes\"\r\n              value={notes}\r\n              onChange={onChange}\r\n              placeholder=\"Enter your notes\"\r\n              className=\"mt-16\"\r\n              type=\"TEXTAREA\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <ModalFooter\r\n          disabled={!email || !username || !address || !phone || !destination}\r\n          leftTitle={isConfirm ? \"Back\" : \"Cancel\"}\r\n          rightTitle={isConfirm ? \"Yes\" : \"Order\"}\r\n          onClickLeftBtn={isConfirm ? onClickBack : onClickCancel}\r\n          onClickRightBtn={onClickRightBtn}\r\n          loading={loading}\r\n        />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nAnyCustomerModal.defaultProps = {\r\n  className: undefined,\r\n  visible: false,\r\n  onClickCancel: () => {},\r\n  onClick: () => {},\r\n};\r\nAnyCustomerModal.propTypes = {\r\n  className: PropTypes.string,\r\n  onClickCancel: PropTypes.func,\r\n  onClick: PropTypes.func.isRequired,\r\n  visible: PropTypes.bool,\r\n};\r\nexport default AnyCustomerModal;\r\n","export const HOME_HEADER = [\r\n  \"Our Team\",\r\n  \"Business\",\r\n  \"Contact\",\r\n  \"Document\",\r\n  // 'GitLab',\r\n];\r\n\r\nexport const BUSINESS_FIELDS = [\r\n  \"Website - Application\",\r\n  \"Hochiminh City Tour Guide\",\r\n  \"Real Estate\",\r\n  \"Assistant\",\r\n];\r\n\r\nexport const FOOD_NAMES = [\"Seafood\", \"Meats\", \"Fruits\", \"Others\"];\r\n\r\nexport const QUANTITY_TYPES = {\r\n  WEIGHT: \"WEIGHT\",\r\n  PACKAGE: \"PACKAGE\",\r\n};\r\nconst { WEIGHT, PACKAGE } = QUANTITY_TYPES;\r\n\r\nexport const WEIGHT_DATA = [\r\n  \"0.5 Kg\",\r\n  \"1.0 Kg\",\r\n  \"1.5 Kg\",\r\n  \"2.0 Kg\",\r\n  \"2.5 Kg\",\r\n  \"3.0 Kg\",\r\n  \"3.5 Kg\",\r\n  \"4.0 Kg\",\r\n];\r\n\r\nexport const PACKAGE_DATA = [\"1 pc\", \"2 pcs\", \"3 psc\", \"4 psc\"];\r\n\r\nexport const QUANTITY_TYPES_ADD_FOOD = [\"Kg\", \"Package/Dish\"];\r\n\r\nexport const STATUS_ENUM = [\"Pending\", \"On Going\", \"Done\", \"Cancel\"];\r\n\r\nexport const MOCKING_FOOD_TABLE = [\r\n  {\r\n    title: \"Seafood\",\r\n    data: [\r\n      {\r\n        name: \"Lobster\",\r\n        price: 1200000,\r\n      },\r\n      {\r\n        name: \"Crab\",\r\n        price: 200000,\r\n      },\r\n      {\r\n        name: \"Octopus\",\r\n        price: 300000,\r\n      },\r\n      {\r\n        name: \"Squid\",\r\n        price: 180000,\r\n      },\r\n      {\r\n        name: \"Shrimp\",\r\n        price: 220000,\r\n      },\r\n      {\r\n        name: \"Snail\",\r\n        price: 160000,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Meats\",\r\n    data: [\r\n      {\r\n        name: \"Lamb\",\r\n        price: 125000,\r\n      },\r\n      {\r\n        name: \"Fork belly\",\r\n        price: 230000,\r\n      },\r\n      {\r\n        name: \"Roast chicken\",\r\n        price: 330000,\r\n        quantityType: PACKAGE,\r\n      },\r\n      {\r\n        name: \"Bacon\",\r\n        price: 120000,\r\n      },\r\n      {\r\n        name: \"Sausages\",\r\n        price: 220000,\r\n        quantityType: PACKAGE,\r\n      },\r\n      {\r\n        name: \"Beef\",\r\n        price: 160000,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Vegetarian\",\r\n    data: [\r\n      {\r\n        name: \"Masala Channa\",\r\n        price: 12000,\r\n        quantityType: PACKAGE,\r\n      },\r\n      {\r\n        name: \"Paneer Makhani Biryani\",\r\n        price: 20000,\r\n        quantityType: PACKAGE,\r\n      },\r\n      {\r\n        name: \"Aamras Ki Kadhi\",\r\n        price: 12000,\r\n        quantityType: PACKAGE,\r\n      },\r\n      {\r\n        name: \"Dahi Kebab\",\r\n        price: 20000,\r\n        quantityType: PACKAGE,\r\n      },\r\n      {\r\n        name: \"Mushroom Kofta in Tomato Gravy\",\r\n        price: 20000,\r\n        quantityType: PACKAGE,\r\n      },\r\n      {\r\n        name: \"Stuffed Baby Eggplant\",\r\n        price: 20000,\r\n        quantityType: PACKAGE,\r\n      },\r\n      {\r\n        name: \"Vegetarian Khao Suey\",\r\n        price: 20000,\r\n        quantityType: PACKAGE,\r\n      },\r\n      {\r\n        name: \"Stuffed Masala Mushrooms\",\r\n        price: 20000,\r\n        quantityType: PACKAGE,\r\n      },\r\n      {\r\n        name: \"Carrot Salad with Grape Dressing\",\r\n        price: 20000,\r\n        quantityType: PACKAGE,\r\n      },\r\n      {\r\n        name: \"Matar Paneer Lababdaar\",\r\n        price: 20000,\r\n        quantityType: PACKAGE,\r\n      },\r\n      {\r\n        name: \"Gobhi Aloo\",\r\n        price: 20000,\r\n        quantityType: PACKAGE,\r\n      },\r\n      {\r\n        name: \"Bombay Style Aloo\",\r\n        price: 20000,\r\n        quantityType: PACKAGE,\r\n      },\r\n      {\r\n        name: \"Paneer Khurchan\",\r\n        price: 20000,\r\n        quantityType: PACKAGE,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Others\",\r\n    data: [\r\n      {\r\n        name: \"Banh Khot\",\r\n        price: 12000,\r\n      },\r\n      {\r\n        name: \"Banh Xeo\",\r\n        price: 20000,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const MIN_MAX_PRICE = [\r\n  0, 100000, 200000, 500000, 1000000, 2000000, 5000000,\r\n];\r\n","// import axios from \"axios\";\r\n// import { CONFIG } from \"../../../Constants\";\r\nimport gql from \"graphql-tag\";\r\nimport { client } from \"../../apolloClient\";\r\n\r\nconst MENU = gql`\r\n  query menu {\r\n    menu {\r\n      id\r\n      title\r\n      name\r\n      rating\r\n      price\r\n      quantityType\r\n      createdAt\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\nconst fetchMenu = async () => {\r\n  try {\r\n    // const res = await axios.get(`${CONFIG.APOLLO_HOST_URL}/api/canteen/menu`);\r\n    const res = await client.query({\r\n      query: MENU,\r\n    });\r\n    const { menu } = res?.data || {};\r\n    // return res.data;\r\n    return menu;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default fetchMenu;\r\n","import { QUANTITY_TYPES } from \"../../../../Constants/home\";\r\nimport _ from \"lodash\";\r\nimport fetchMenu from \"../../../../Apollo/Functions/Fetch/fetchMenu\";\r\nimport auth from \"../../../../Helpers/auth\";\r\n// import testimg1 from \"../../../../Images/Foods/1.webp\";\r\n// import testimg10 from \"../../../../Images/Foods/10.jpg\";\r\n// import testimg11 from \"../../../../Images/Foods/11.png\";\r\n// import testimg12 from \"../../../../Images/Foods/12.webp\";\r\n// import testimg13 from \"../../../../Images/Foods/13.webp\";\r\n// import testimg2 from \"../../../../Images/Foods/2.webp\";\r\n// import testimg3 from \"../../../../Images/Foods/3.webp\";\r\n// import testimg4 from \"../../../../Images/Foods/4.webp\";\r\n// import testimg5 from \"../../../../Images/Foods/5.jpg\";\r\n// import testimg6 from \"../../../../Images/Foods/6.jpg\";\r\n// import testimg7 from \"../../../../Images/Foods/7.webp\";\r\n// import testimg8 from \"../../../../Images/Foods/8.jpg\";\r\n// import testimg9 from \"../../../../Images/Foods/9.webp\";\r\n\r\nexport const getFoodMasterData = async () => {\r\n  try {\r\n    const res = await fetchMenu();\r\n    auth.setMenu(res);\r\n    const titles = [];\r\n    const foodData = [];\r\n    const grouped = _.groupBy(res, (x) => x.title);\r\n    Object.keys(grouped).forEach((x) => {\r\n      titles.push(x);\r\n      foodData.push({\r\n        title: x,\r\n        data: grouped[x],\r\n      });\r\n    });\r\n    auth.setKindOfFood(titles);\r\n    auth.setMasterData(foodData);\r\n    auth.setFoodData(undefined);\r\n    return foodData;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst calWeight = (z = {}, cartTags = []) => {\r\n  const quantity = z.quantity.slice(0, 3);\r\n  const res = parseFloat(quantity) * z.price;\r\n  if (res > 0) {\r\n    cartTags.push(`${z.name} (${z.price} * ${quantity})`);\r\n  }\r\n  return res;\r\n};\r\n\r\nconst calPackage = (z = {}, cartTags) => {\r\n  const quantity = z.quantity.slice(0, 1);\r\n  const res = parseFloat(quantity) * z.price;\r\n  if (res > 0) {\r\n    cartTags.push(`${z.name} (${z.price} * ${quantity})`);\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const calcCartTotal = (foodData = []) => {\r\n  let total = 0;\r\n  const cartTags = [];\r\n  _.forEach(foodData, (x) => {\r\n    total += _.sumBy(x.data, (z) => {\r\n      if (z.isBuy) {\r\n        return calPackage(z, cartTags) || calWeight(z, cartTags);\r\n      }\r\n      return 0;\r\n    });\r\n  });\r\n  // console.log({ foodData, total, cartTags });\r\n  return { total, cartTags };\r\n};\r\n\r\nexport const handleFilterFood = (filterObject = {}, foodData = []) => {\r\n  // console.log({ filterObject, foodData });\r\n  const { searchName, rating, kind, minPrice, maxPrice } = filterObject;\r\n  console.log({ searchName, rating, kind, minPrice, maxPrice });\r\n  let newFoodata = _.cloneDeep(foodData);\r\n  _.forEach(newFoodata, (x) => {\r\n    x.data = _.filter(x.data, (y) => {\r\n      let condition = true;\r\n      if (kind) {\r\n        // console.log(\"kind\");\r\n        condition = y.title === kind;\r\n      }\r\n      if (!_.isNil(rating) && !_.isNil(y.rating)) {\r\n        // console.log(\"rating\");\r\n        condition = condition && y.rating >= rating;\r\n      }\r\n      if (searchName) {\r\n        // console.log(\"searchName\");\r\n        condition =\r\n          condition && y.name?.toLowerCase().includes(searchName.toLowerCase());\r\n      }\r\n      if (!_.isNil(minPrice)) {\r\n        // console.log(\"minPrice\");\r\n        condition = condition && y.price >= minPrice;\r\n      }\r\n      if (!_.isNil(maxPrice)) {\r\n        // console.log(\"maxPrice\");\r\n        condition = condition && y.price <= maxPrice;\r\n      }\r\n      return condition;\r\n    });\r\n  });\r\n  // console.log({ newFoodata, foodData });\r\n\r\n  return _.filter(newFoodata, (x) => x.data?.length !== 0);\r\n};\r\n\r\n// const arr = [\r\n//   testimg1,\r\n//   testimg2,\r\n//   testimg3,\r\n//   testimg4,\r\n//   testimg5,\r\n//   testimg6,\r\n//   testimg7,\r\n//   testimg8,\r\n//   testimg9,\r\n//   testimg10,\r\n//   testimg11,\r\n//   testimg12,\r\n//   testimg13,\r\n// ];\r\nexport const testUpdateBase64 = () => {\r\n  // const arrImages = [];\r\n  // arr.forEach((e) => {\r\n  //   toDataURL(e, function (dataUrl) {\r\n  //     arrImages.push(dataUrl);\r\n  //   });\r\n  // });\r\n  // setTimeout(() => {\r\n  //   // console.log({ arrImages });\r\n  //   setState({ arrImages });\r\n  // }, 500);\r\n};\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const TEMP = \"\";\r\n\r\nconst USER = gql`\r\n  {\r\n    id\r\n    username\r\n    email\r\n    role\r\n    signUpDate\r\n    status\r\n    gender\r\n    address\r\n    phone\r\n    dob\r\n    isVerified\r\n  }\r\n`;\r\n\r\nexport default USER;\r\n","// import axios from \"axios\";\r\n// import { CONFIG } from \"../../../Constants\";\r\nimport gql from \"graphql-tag\";\r\nimport { client } from \"../../apolloClient\";\r\nimport USER from \"../../Fragments/user\";\r\n\r\nconst SIGN_IN = gql`\r\n  mutation signIn($phone: String!, $password: String!) {\r\n    signIn(phone: $phone, password: $password) {\r\n      isSuccess\r\n      data {\r\n        token\r\n        user {\r\n          ...${USER}\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst handleLogin = async (variables) => {\r\n  try {\r\n    // const res = await axios.post(\r\n    //   `${CONFIG.APOLLO_HOST_URL}/api/public/login`,\r\n    //   variables\r\n    // );\r\n    // return res.data;\r\n    const result = await client.mutate({\r\n      mutation: SIGN_IN,\r\n      variables,\r\n    });\r\n    const { signIn } = result?.data;\r\n    return signIn;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default handleLogin;\r\n","import currencyFormatter from \"currency-formatter\";\r\n\r\nexport const temp = \"\";\r\n\r\nexport const getPrice = (value = 0, unit = \"VND\", text = \"Price:\") => {\r\n  let temp = \"\";\r\n  switch (unit) {\r\n    case \"VND\":\r\n      temp = currencyFormatter.format(value, { code: \"VND\" });\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return `${text} ${temp}`;\r\n};\r\n\r\nexport const toDataURL = (url, callback) => {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.onload = function () {\r\n    var reader = new FileReader();\r\n    reader.onloadend = function () {\r\n      callback(reader.result);\r\n    };\r\n    reader.readAsDataURL(xhr.response);\r\n  };\r\n  xhr.open(\"GET\", url);\r\n  xhr.responseType = \"blob\";\r\n  xhr.send();\r\n};\r\n\r\nexport const getOrderTotal = (data = []) => {\r\n  // console.log({ data });\r\n  let total = 0;\r\n  _.forEach(data, (x) => {\r\n    total += x.price * x.quantity;\r\n  });\r\n  return getPrice(total, undefined, \"\");\r\n};\r\n\r\nexport const checkServerErr = (error = {}) => {\r\n  if (\r\n    error?.graphQLErrors?.[0]?.message?.includes(\"E11000 duplicate key error\")\r\n  ) {\r\n    return \"Email already existed!\";\r\n  }\r\n\r\n  return \"\";\r\n};\r\n\r\nexport const formatPhone = (phone = \"\") => {\r\n  if (phone[0] === \"0\") {\r\n    return \"+84\" + phone.slice(1);\r\n  }\r\n  if (phone.slice(0, 2) !== \"84\") {\r\n    return \"+84\" + phone;\r\n  }\r\n  return \"+\" + phone;\r\n};\r\n","import handleLogin from \"../../../Apollo/Functions/Handle/handleLogin\";\r\nimport { formatPhone } from \"../../../Helpers\";\r\nimport { isValidEmail } from \"../../../Utils\";\r\n\r\nexport const mutationSignIn = async (data = {}) => {\r\n  const { phone, password } = data;\r\n  try {\r\n    return await handleLogin({ phone: formatPhone(phone), password });\r\n  } catch (error) {\r\n    return { isSuccess: false, message: \"Incorrect password\" };\r\n  }\r\n};\r\n\r\nexport const checkValidLogin = (state = {}) => {\r\n  const { phone, password } = state;\r\n  // if (!isValidEmail(phone)) {\r\n  //   return { phoneErr: \"Incorrect phone number\" };\r\n  // }\r\n  if (password.length < 6) {\r\n    return { passwordErr: \"Incorrect password\" };\r\n  }\r\n  return { isSuccess: true };\r\n};\r\n","import { Modal } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport auth from \"../../../Helpers/auth\";\r\nimport { useMergeState } from \"../../../Helpers/customHooks\";\r\nimport InputCT from \"../../Inputs/InputCT\";\r\nimport ModalFooter from \"../ModalFooter\";\r\nimport ModalHeader from \"../ModalHeader\";\r\nimport { checkValidLogin, mutationSignIn } from \"./helper\";\r\n\r\nconst DEFAULT_DATA = {\r\n  phone: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst LoginModal = (props) => {\r\n  const [state, setState] = useMergeState({\r\n    phone: \"\",\r\n    password: \"\",\r\n    phoneErr: \"\",\r\n    passwordErr: \"\",\r\n    loading: false,\r\n  });\r\n  const { className, visible, onClickCancel } = props;\r\n  const { phone, password, phoneErr, passwordErr, loading } = state;\r\n\r\n  const onChange = (key, value) => {\r\n    setState({ [key]: value, phoneErr: \"\", passwordErr: \"\" });\r\n  };\r\n\r\n  const onClickRightBtn = async () => {\r\n    const res = checkValidLogin(state);\r\n    if (res.isSuccess) {\r\n      setState({ loading: true });\r\n      const resLogin = await mutationSignIn(state);\r\n      // console.log({ resLogin });\r\n      if (resLogin.isSuccess) {\r\n        auth.setDatalogin(resLogin.data.user);\r\n        props.loginRequest(resLogin.data);\r\n        onClickCancel();\r\n        alert(\"Login successfully!\");\r\n      } else {\r\n        alert(\"Login failed \" + resLogin.message);\r\n      }\r\n\r\n      setState({ loading: false });\r\n    } else {\r\n      setState(res);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"login-modal\"\r\n      destroyOnClose\r\n      visible={visible}\r\n      footer={null}\r\n      closable={false}\r\n      centered\r\n    >\r\n      <div className={classnames(\"stop-health-care-modal-wrapper\", className)}>\r\n        <ModalHeader title=\"Login\" onClick={onClickCancel} />\r\n\r\n        <div className=\"login-modal-main\">\r\n          <InputCT\r\n            title=\"Phone number\"\r\n            name=\"phone\"\r\n            value={phone}\r\n            onChange={onChange}\r\n            placeholder=\"Enter your phone number\"\r\n            errMes={phoneErr}\r\n            allowLeadingZeros\r\n            prefix=\"+\"\r\n            type=\"NUMBER\"\r\n            maxLength={15}\r\n          />\r\n          <InputCT\r\n            title=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={onChange}\r\n            placeholder=\"Enter your phone\"\r\n            type=\"PASSWORD\"\r\n            className=\"mt-16\"\r\n            errMes={passwordErr}\r\n          />\r\n        </div>\r\n\r\n        <ModalFooter\r\n          disabled={!phone || !password}\r\n          leftTitle=\"Cancel\"\r\n          rightTitle=\"Login\"\r\n          onClickLeftBtn={onClickCancel}\r\n          onClickRightBtn={onClickRightBtn}\r\n          loading={loading}\r\n        />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nLoginModal.defaultProps = {\r\n  className: \"\",\r\n  visible: false,\r\n\r\n  onClickCancel: () => {},\r\n  loginRequest: () => {},\r\n};\r\nLoginModal.propTypes = {\r\n  className: PropTypes.string,\r\n  visible: PropTypes.bool,\r\n\r\n  onClickCancel: PropTypes.func,\r\n  loginRequest: PropTypes.func,\r\n};\r\n\r\nexport default LoginModal;\r\n","// import axios from \"axios\";\r\n// import { CONFIG } from \"../../../Constants\";\r\nimport gql from \"graphql-tag\";\r\nimport { client } from \"../../apolloClient\";\r\n\r\nconst SIGN_UP = gql`\r\n  mutation signUp($phone: String!, $password: String!, $address: String!) {\r\n    signUp(phone: $phone, password: $password, address: $address) {\r\n      isSuccess\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nconst handleRegister = async (variables) => {\r\n  try {\r\n    // const res = await axios.post(\r\n    //   `${CONFIG.APOLLO_HOST_URL}/api/user/createuser`,\r\n    //   variables\r\n    // );\r\n    // return res.data;\r\n    const result = await client.mutate({\r\n      mutation: SIGN_UP,\r\n      variables,\r\n    });\r\n    const { signUp } = result?.data;\r\n    return signUp;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default handleRegister;\r\n","import { data } from \"jquery\";\r\nimport handleRegister from \"../../../Apollo/Functions/Handle/handleRegister\";\r\nimport { checkServerErr, formatPhone } from \"../../../Helpers\";\r\nimport { isValidEmail } from \"../../../Utils\";\r\n\r\nexport const handleRightBtnClick = (state = {}) => {\r\n  const { password, confirmPassword, phone } = state;\r\n  if (password.length < 6) {\r\n    return { passwordErr: \"Password must have 6 or more characters\" };\r\n  }\r\n  if (password !== confirmPassword) {\r\n    return { confirmPasswordErr: \"Confirm password is not match\" };\r\n  }\r\n  // if (!isValidEmail(email)) {\r\n  //   return { emailErr: \"Incorrect email format\" };\r\n  // }\r\n  if (phone.length < 8) {\r\n    return { phoneErr: \"Invalid phone number!\" };\r\n  }\r\n};\r\n\r\nexport const disabledRegister = (state = {}) => {\r\n  const { password, confirmPassword, phone, address } = state;\r\n\r\n  if (!phone || !address || !password || !confirmPassword) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const mutationCreateUser = async (data) => {\r\n  const { password, phone, address } = data;\r\n  try {\r\n    return await handleRegister({\r\n      phone: formatPhone(phone),\r\n      password,\r\n      address,\r\n    });\r\n  } catch (error) {\r\n    console.log(\"Failed to create user: \", error);\r\n    return {\r\n      isSuccess: false,\r\n      message: checkServerErr(error),\r\n    };\r\n  }\r\n};\r\n\r\nexport const setDefaultData = () => {\r\n  const data = {\r\n    email: \"tttriet19977@gmail.com\",\r\n    password: \"0819541897\",\r\n    confirmPassword: \"0819541897\",\r\n    username: \"AceKnight\",\r\n    phone: \"0819541897\",\r\n    address: \"329 le van Luong, P.Tan Quy, Q.7, TPHCM\",\r\n  };\r\n  return data;\r\n};\r\n","import { Modal } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useMergeState } from \"../../../Helpers/customHooks\";\r\nimport InputCT from \"../../Inputs/InputCT\";\r\nimport ModalFooter from \"../ModalFooter\";\r\nimport ModalHeader from \"../ModalHeader\";\r\nimport {\r\n  disabledRegister,\r\n  handleRightBtnClick,\r\n  mutationCreateUser,\r\n} from \"./helper\";\r\n\r\nconst DEFAULT_DATA = {\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n  phone: \"\",\r\n  address: \"\",\r\n\r\n  passwordErr: \"\",\r\n  confirmPasswordErr: \"\",\r\n  phoneErr: \"\",\r\n  addressErr: \"\",\r\n\r\n  loading: false,\r\n  isStep1: true,\r\n};\r\n\r\nconst RegisterModal = (props) => {\r\n  const [state, setState] = useMergeState({\r\n    ...DEFAULT_DATA,\r\n  });\r\n  const { className, visible, onClickCancel } = props;\r\n  const {\r\n    password,\r\n    confirmPassword,\r\n    phone,\r\n    address,\r\n\r\n    passwordErr,\r\n    confirmPasswordErr,\r\n    phoneErr,\r\n    addressErr,\r\n\r\n    loading,\r\n    isStep1,\r\n  } = state;\r\n\r\n  useEffect(() => {\r\n    // setState({ ...setDefaultData() });\r\n    if (!visible) {\r\n      setState({ ...DEFAULT_DATA });\r\n    }\r\n  }, [visible]);\r\n\r\n  const onClickBack = () => {\r\n    setState({ isStep1: true });\r\n  };\r\n\r\n  const onChange = (key, value) => {\r\n    const obj = { [key]: value };\r\n    if (isStep1) {\r\n      _.assign(obj, { emailErr: \"\", passwordErr: \"\", confirmPasswordErr: \"\" });\r\n      setState(obj);\r\n    } else {\r\n      _.assign(obj, {\r\n        usernameErr: \"\",\r\n        phoneErr: \"\",\r\n        addressErr: \"\",\r\n      });\r\n      setState(obj);\r\n    }\r\n  };\r\n\r\n  const onClickRightBtn = async () => {\r\n    const errObj = handleRightBtnClick(state);\r\n    if (_.isEmpty(errObj)) {\r\n      const obj = { loading: false };\r\n      setState({ loading: true });\r\n      const res = await mutationCreateUser(state);\r\n      if (res.isSuccess) {\r\n        alert(\"Successfully creating user!\");\r\n        onClickCancel();\r\n      } else {\r\n        alert(\"Failed to create user: \" + res.message);\r\n      }\r\n      setState(obj);\r\n    } else {\r\n      setState(errObj);\r\n    }\r\n  };\r\n\r\n  const renderMain = () => (\r\n    <>\r\n      <InputCT\r\n        title=\"Phone number\"\r\n        name=\"phone\"\r\n        value={phone}\r\n        onChange={onChange}\r\n        placeholder=\"Enter your phone number\"\r\n        className=\"mt-16\"\r\n        type=\"NUMBER\"\r\n        errMes={phoneErr}\r\n        allowLeadingZeros\r\n        prefix=\"+\"\r\n        maxLength={15}\r\n      />\r\n      <InputCT\r\n        title=\"Password\"\r\n        name=\"password\"\r\n        value={password}\r\n        onChange={onChange}\r\n        placeholder=\"Enter your password\"\r\n        type=\"PASSWORD\"\r\n        className=\"mt-16\"\r\n        errMes={passwordErr}\r\n      />\r\n      <InputCT\r\n        title=\"Confirm password\"\r\n        name=\"confirmPassword\"\r\n        value={confirmPassword}\r\n        onChange={onChange}\r\n        placeholder=\"Enter your confirm password\"\r\n        type=\"PASSWORD\"\r\n        className=\"mt-16\"\r\n        errMes={confirmPasswordErr}\r\n      />\r\n      <InputCT\r\n        title=\"Address\"\r\n        name=\"address\"\r\n        value={address}\r\n        onChange={onChange}\r\n        placeholder=\"Enter your address\"\r\n        className=\"mt-16\"\r\n        errMes={addressErr}\r\n      />\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      className=\"register-modal\"\r\n      destroyOnClose\r\n      visible={visible}\r\n      footer={null}\r\n      closable={false}\r\n      centered\r\n    >\r\n      <div className={classnames(\"register-modal-wrapper\", className)}>\r\n        <ModalHeader title=\"Register\" onClick={onClickCancel} />\r\n\r\n        <div className=\"register-modal-main\">{renderMain()}</div>\r\n\r\n        <ModalFooter\r\n          disabled={disabledRegister(state)}\r\n          leftTitle={\"Cancel\"}\r\n          rightTitle={\"Register\"}\r\n          onClickLeftBtn={onClickBack}\r\n          onClickRightBtn={onClickRightBtn}\r\n          loading={loading}\r\n        />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nRegisterModal.defaultProps = {\r\n  className: \"\",\r\n  visible: false,\r\n  onClickCancel: () => {},\r\n};\r\nRegisterModal.propTypes = {\r\n  className: PropTypes.string,\r\n  visible: PropTypes.bool,\r\n  onClickCancel: PropTypes.func,\r\n};\r\n\r\nexport default RegisterModal;\r\n","import { Button } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport auth from \"../../../../Helpers/auth\";\r\nimport { useMergeState } from \"../../../../Helpers/customHooks\";\r\nimport { loginRequest, logoutRequest } from \"../../../../Redux/Actions/login\";\r\nimport LoginModal from \"../../../Modals/LoginModal\";\r\nimport RegisterModal from \"../../../Modals/RegisterModal\";\r\n\r\nconst HomeHeader = (props) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [state, setState] = useMergeState({\r\n    visibleLogin: false,\r\n    visibleRegister: false,\r\n  });\r\n  const { className } = props;\r\n  const { visibleLogin, visibleRegister } = state;\r\n  const onClickLogin = () => {\r\n    setState({ visibleLogin: !visibleLogin });\r\n  };\r\n  const onClickRegister = () => {\r\n    setState({ visibleRegister: !visibleRegister });\r\n  };\r\n  const onClickActive = () => {};\r\n  const onClickUsername = () => {\r\n    if (location.pathname !== \"/user\") {\r\n      history.push(\"/user\");\r\n    }\r\n  };\r\n  const onClickHistory = () => {\r\n    if (location.pathname !== \"/history\") {\r\n      history.push(\"/history\");\r\n    }\r\n  };\r\n  const onClickLogout = () => {\r\n    auth.logout();\r\n    props.logoutRequest();\r\n    history.push(\"/acestore\");\r\n    setState({});\r\n  };\r\n\r\n  const { isVerify = true, phone } = auth.getDataLogin();\r\n\r\n  useEffect(() => {\r\n    if (_.isEmpty(props.login) && _.isEmpty(auth.getDataLogin())) {\r\n      console.log(\"No current user\");\r\n      setState({});\r\n    }\r\n  }, [props.login]);\r\n\r\n  return (\r\n    <>\r\n      <div className={classnames(\"home-header\", className)}>\r\n        {/*  <img src={logo} alt=\"Logo\" /> */}\r\n\r\n        <div className=\"home-header-btns\">\r\n          {phone ? (\r\n            <>\r\n              {!isVerify && (\r\n                <Button\r\n                  type=\"link\"\r\n                  onClick={onClickActive}\r\n                  className=\"home-header-active-account-btn\"\r\n                >\r\n                  Activate account\r\n                </Button>\r\n              )}\r\n\r\n              <Button\r\n                type=\"link\"\r\n                onClick={onClickUsername}\r\n                className=\"home-header-username-btn\"\r\n              >\r\n                {phone}\r\n              </Button>\r\n              <Button\r\n                type=\"link\"\r\n                onClick={onClickHistory}\r\n                className=\"home-header-username-btn\"\r\n              >\r\n                History\r\n              </Button>\r\n              <Button\r\n                type=\"link\"\r\n                onClick={onClickLogout}\r\n                className=\"home-header-logout-btn\"\r\n              >\r\n                Logout\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Button\r\n                type=\"link\"\r\n                onClick={onClickLogin}\r\n                className=\"home-header-login-btn\"\r\n              >\r\n                Login\r\n              </Button>\r\n              <Button\r\n                type=\"link\"\r\n                onClick={onClickRegister}\r\n                className=\"home-header-register-btn\"\r\n              >\r\n                Register\r\n              </Button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <LoginModal\r\n        visible={visibleLogin}\r\n        onClickCancel={onClickLogin}\r\n        loginRequest={props.loginRequest}\r\n      />\r\n      <RegisterModal\r\n        visible={visibleRegister}\r\n        onClickCancel={onClickRegister}\r\n      />\r\n    </>\r\n  );\r\n};\r\nHomeHeader.defaultProps = {\r\n  className: \"\",\r\n};\r\n\r\nHomeHeader.propTypes = {\r\n  className: PropTypes.string,\r\n  login: PropTypes.shape({\r\n    isSuccess: PropTypes.bool,\r\n  }).isRequired,\r\n  loginRequest: PropTypes.func.isRequired,\r\n  logoutRequest: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  login: state.login,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loginRequest,\r\n  logoutRequest,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeHeader);\r\n","import { Table } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport \"./_antd-table.scss\";\r\n\r\nconst AntdTable = (props) => {\r\n  useEffect(() => {}, []);\r\n\r\n  const { loading, columns, className, rowKey, name, totalData, onRowClick } =\r\n    props;\r\n\r\n  return (\r\n    <Table\r\n      rowKey={rowKey}\r\n      className={classnames(className, \"antd-table\")}\r\n      dataSource={totalData}\r\n      onRow={(record, rowIndex) => ({\r\n        onClick: (e) => {\r\n          onRowClick(rowIndex, record);\r\n        },\r\n      })}\r\n      pagination={false}\r\n      //   pagination={\r\n      //     props.isNoPagination\r\n      //       ? false\r\n      //       : {\r\n      //           itemRender,\r\n      //           onChange: onChangePage,\r\n      //           current: props.page,\r\n      //           showSizeChanger: false,\r\n      //         }\r\n      //   }\r\n      //   locale={{ emptyText: props.emptyText }}\r\n      columns={columns}\r\n      loading={loading}\r\n      //   onChange={props.shouldShowAllData ? undefined : handleTableChange}\r\n      //   sticky={props.sticky}\r\n    />\r\n  );\r\n};\r\n\r\nAntdTable.defaultProps = {\r\n  name: \"\",\r\n  className: undefined,\r\n  onRowClick: () => {},\r\n  shouldHideNextButton: false,\r\n  fetchData: () => {},\r\n  loading: false,\r\n  sorter: {},\r\n  shouldShowAllData: false,\r\n  handleChangePage: () => {},\r\n  isNoPagination: false,\r\n  page: 1,\r\n  sticky: false,\r\n};\r\n\r\nAntdTable.propTypes = {\r\n  rowKey: PropTypes.string.isRequired,\r\n  name: PropTypes.string,\r\n  className: PropTypes.string,\r\n  totalData: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  columns: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  onRowClick: PropTypes.func,\r\n  shouldHideNextButton: PropTypes.bool,\r\n  fetchData: PropTypes.func,\r\n  loading: PropTypes.bool,\r\n  sorter: PropTypes.shape({\r\n    field: PropTypes.string,\r\n    order: PropTypes.string,\r\n  }),\r\n  shouldShowAllData: PropTypes.bool,\r\n  page: PropTypes.number,\r\n  handleChangePage: PropTypes.func,\r\n  isNoPagination: PropTypes.bool,\r\n  sticky: PropTypes.bool,\r\n};\r\n\r\nexport default AntdTable;\r\n","import { Spin } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport \"./_loading.scss\";\r\n\r\nconst Loading = (props) => {\r\n  const { className } = props;\r\n  return (\r\n    <div className={classnames(\"loading\", className)}>\r\n      {/*<div className=\"loader-gif\"></div>*/}\r\n      <Spin />\r\n    </div>\r\n  );\r\n};\r\nLoading.defaultProps = {\r\n  className: \"\",\r\n};\r\nLoading.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Loading;\r\n","// import axios from \"axios\";\r\n// import { CONFIG } from \"../../../Constants\";\r\nimport gql from \"graphql-tag\";\r\nimport { client } from \"../../apolloClient\";\r\n\r\nconst ADD_FOOD = gql`\r\n  mutation createAnyCustomerOrder($input: AnyCustomerOrderInput!) {\r\n    createAnyCustomerOrder(input: $input) {\r\n      isSuccess\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst handleCreateAnyCustomerOrder = async (variables) => {\r\n  try {\r\n    // const res = await axios.post(\r\n    //   `${CONFIG.APOLLO_HOST_URL}/api/foodorder/createanycustomerorder`,\r\n    //   variables\r\n    // );\r\n    // return res.data;\r\n    const result = await client.mutate({\r\n      mutation: ADD_FOOD,\r\n      variables,\r\n    });\r\n    const { createAnyCustomerOrder } = result?.data;\r\n    return createAnyCustomerOrder;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default handleCreateAnyCustomerOrder;\r\n","// import axios from \"axios\";\r\n// import { CONFIG } from \"../../../Constants\";\r\nimport gql from \"graphql-tag\";\r\nimport createClient from \"../../apolloClient\";\r\n\r\nconst CREATE_ORDER = gql`\r\n  mutation createOrder($input: [OrderInput]!) {\r\n    createOrder(input: $input) {\r\n      isSuccess\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst handleCreateOrder = async (variables) => {\r\n  try {\r\n    const client = await createClient();\r\n    const res = await client.mutate({\r\n      mutation: CREATE_ORDER,\r\n      variables,\r\n    });\r\n    const { createOrder } = res?.data || {};\r\n    // return res.data;\r\n    return createOrder;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default handleCreateOrder;\r\n","import handleCreateAnyCustomerOrder from \"../../Apollo/Functions/Handle/handleCreateAnyCustomerOrder\";\r\nimport handleCreateOrder from \"../../Apollo/Functions/Handle/handleCreateOrder\";\r\n\r\nexport const temp = \"\";\r\n\r\nexport const getFoodData = (foodData = []) => {\r\n  const arr = [];\r\n  let index = 1;\r\n  _.forEach(foodData, (x) => {\r\n    _.forEach(x.data || [], (y) => {\r\n      if (y.isBuy) {\r\n        // console.log({ y });\r\n        arr.push({ ...y, index });\r\n        index += 1;\r\n      }\r\n    });\r\n  });\r\n  // console.log({ arr });\r\n  return arr;\r\n};\r\n\r\nexport const mutationCreateOrder = async (\r\n  foodData = [],\r\n  email = \"\",\r\n  notes = \"\",\r\n  destination = \"\"\r\n) => {\r\n  const sendingData = foodData.map((x) => ({\r\n    food: x.id,\r\n    quantity: parseFloat(x.quantity.slice(0, 3)),\r\n    email,\r\n    notes,\r\n    status: \"Pending\",\r\n    price: x.price,\r\n    destination,\r\n  }));\r\n  console.log({ sendingData, foodData });\r\n  try {\r\n    const res = await handleCreateOrder({ input: sendingData });\r\n    return res;\r\n  } catch (error) {\r\n    console.log(\"Failed to create order: \", { error });\r\n    return { isSuccess: false, message: error };\r\n  }\r\n};\r\n\r\nexport const createOrderForAnyCustomer = async (\r\n  foodData = [],\r\n  anyCustomerData = {}\r\n) => {\r\n  const { email, username, address, phone, notes, destination } =\r\n    anyCustomerData;\r\n  const orders = foodData.map((x) => ({\r\n    food: x.id,\r\n    quantity: parseFloat(x.quantity.slice(0, 3)),\r\n    email,\r\n    notes,\r\n    status: \"Pending\",\r\n    price: x.price,\r\n    destination,\r\n  }));\r\n  const customer = { email, username, address, phone, password: phone };\r\n  const sendingData = { orders, customer };\r\n  // console.log({ foodData, anyCustomerData, sendingData });\r\n  try {\r\n    return await handleCreateAnyCustomerOrder({ input: sendingData });\r\n  } catch (error) {\r\n    return { isSuccess: false, message: error };\r\n  }\r\n};\r\n","import { Button } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport InputCT from \"../../Components/Inputs/InputCT\";\r\nimport AnyCustomerModal from \"../../Components/Modals/AnyCustomerModal\";\r\nimport { calcCartTotal } from \"../../Components/Pages/Home/HomeBody/helper\";\r\nimport HomeHeader from \"../../Components/Pages/Home/HomeHeader\";\r\nimport AntdTable from \"../../Components/Tables/AntdTable\";\r\nimport Loading from \"../../Components/UI/Loading\";\r\nimport { getPrice } from \"../../Helpers\";\r\nimport auth from \"../../Helpers/auth\";\r\nimport { useMergeState } from \"../../Helpers/customHooks\";\r\nimport {\r\n  createOrderForAnyCustomer,\r\n  getFoodData,\r\n  mutationCreateOrder,\r\n} from \"./helper\";\r\nimport \"./_food-order.scss\";\r\n\r\nconst FoodOrder = (props) => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [state, setState] = useMergeState({\r\n    foodData: getFoodData(location.state),\r\n    anyCustomerVisible: false,\r\n    notes: \"\",\r\n    destination: \"\",\r\n    loading: false,\r\n  });\r\n  const { className } = props;\r\n\r\n  const { foodData, anyCustomerVisible, notes, destination, loading } = state;\r\n  const { total } = calcCartTotal(location.state);\r\n  const { address, phone, email } = auth.getDataLogin();\r\n\r\n  const onChange = (key, value) => {\r\n    setState({ [key]: value });\r\n  };\r\n\r\n  const generateColumns = () => {\r\n    const columns = [\r\n      {\r\n        title: \"No.\",\r\n        dataIndex: \"index\",\r\n      },\r\n      {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n      },\r\n      {\r\n        title: \"Price\",\r\n        dataIndex: \"price\",\r\n        render: (cell) => getPrice(cell, undefined, \"\"),\r\n      },\r\n      {\r\n        title: \"Quantity\",\r\n        dataIndex: \"quantity\",\r\n      },\r\n    ];\r\n    return columns;\r\n  };\r\n\r\n  const orderAnyCustomer = async (anyCustomerData = {}) => {\r\n    setState({ loading: true });\r\n    const res = await createOrderForAnyCustomer(foodData, anyCustomerData);\r\n    const obj = { loading: false };\r\n    if (res.isSuccess) {\r\n      alert(\"Successfully creating order!\");\r\n      auth.setFoodData(undefined);\r\n      _.assign(obj, { anyCustomerVisible: false });\r\n      setTimeout(() => {\r\n        history.push(\"/acestore\");\r\n      }, 300);\r\n    } else {\r\n      alert(\"Failed to create order: \", res.message);\r\n    }\r\n    setState(obj);\r\n  };\r\n\r\n  const onClickBack = () => {\r\n    history.push(\"/acestore\");\r\n  };\r\n\r\n  const onClickCancel = () => {\r\n    setState({ anyCustomerVisible: !anyCustomerVisible });\r\n  };\r\n\r\n  const onClickConfirm = async () => {\r\n    if (!address || !phone || !email) {\r\n      setState({ anyCustomerVisible: true });\r\n      return;\r\n    }\r\n    setState({ loading: true });\r\n    const res = await mutationCreateOrder(foodData, email, notes, destination);\r\n    if (res.isSuccess) {\r\n      alert(\"Successfully creating order!\");\r\n      auth.setFoodData(undefined);\r\n      history.push(\"/acestore\");\r\n    } else {\r\n      alert(\"Failed to create order: \", res.message);\r\n    }\r\n    setState({ loading: false });\r\n  };\r\n\r\n  return (\r\n    <div className={classnames(\"food-order\", className)}>\r\n      <HomeHeader></HomeHeader>\r\n      <div className=\"food-order-body\">\r\n        <div className=\"food-order-body-toper\">\r\n          <div className=\"flex\">\r\n            <span className=\"b\">Payment Options:</span>\r\n            <span className=\"ml-4\">Cash - When receiving</span>\r\n          </div>\r\n          <div className=\"flex\">\r\n            <span className=\"b\">Total:</span>\r\n            <span className=\"ml-4\">{getPrice(total, undefined, \"\")}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"food-order-body-toper\">\r\n          <div className=\"flex\">\r\n            <span className=\"b\">Delivery:</span>\r\n            <span className=\"ml-4\">{address}</span>\r\n          </div>\r\n          <div className=\"flex\">\r\n            <span className=\"b\">Contact at:</span>\r\n            <span className=\"ml-4\">{phone}</span>\r\n          </div>\r\n        </div>\r\n        {email && (\r\n          <>\r\n            <InputCT\r\n              titleClassName=\"b\"\r\n              title=\"Destination\"\r\n              name=\"destination\"\r\n              value={destination}\r\n              onChange={onChange}\r\n              placeholder=\"Enter your notes\"\r\n              className=\"mt-16\"\r\n            />\r\n            <InputCT\r\n              titleClassName=\"b\"\r\n              title=\"Notes\"\r\n              name=\"notes\"\r\n              value={notes}\r\n              onChange={onChange}\r\n              placeholder=\"Enter your notes\"\r\n              className=\"mt-16\"\r\n              type=\"TEXTAREA\"\r\n            />\r\n          </>\r\n        )}\r\n        <div className=\"food-order-body-btns\">\r\n          <Button onClick={onClickBack}>Back</Button>\r\n          <Button type=\"primary\" onClick={onClickConfirm}>\r\n            Confirm\r\n          </Button>\r\n        </div>\r\n        <AntdTable\r\n          className=\"mt-48\"\r\n          rowKey=\"id\"\r\n          totalData={foodData}\r\n          columns={generateColumns()}\r\n        ></AntdTable>\r\n      </div>\r\n\r\n      <AnyCustomerModal\r\n        visible={anyCustomerVisible}\r\n        onClickCancel={onClickCancel}\r\n        onClick={orderAnyCustomer}\r\n      ></AnyCustomerModal>\r\n      {loading && <Loading></Loading>}\r\n    </div>\r\n  );\r\n};\r\nFoodOrder.defaultProps = {\r\n  className: \"\",\r\n};\r\nFoodOrder.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  login: state.login,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodOrder);\r\n","import { notification } from 'antd';\r\n// import { CALENDAR_MESSAGES } from '../Constants';\r\n// import { NEW_PATIENT_MESSAGES } from '../Constants/newPatientData';\r\n\r\n// const { NEW_OR_ACTIVE_CAREPLAN_COPY } = NEW_PATIENT_MESSAGES;\r\n\r\n// const {\r\n//   CANCELED_SUCCESS, UPDATE_SUCCESS, INVALID_DATE, CREATE_FAILED, CREATE_SUCCESS, UPDATE_FAILED,\r\n// } = CALENDAR_MESSAGES;\r\n\r\nlet handleShowMes;\r\n\r\nexport const showFailedMsg = (message = '', duration = 3, description = undefined) => {\r\n  notification.destroy();\r\n  if (handleShowMes) {\r\n    clearTimeout(handleShowMes);\r\n  }\r\n  handleShowMes = setTimeout(() => {\r\n    notification.error({\r\n      message,\r\n      description,\r\n      placement: 'bottomLeft',\r\n      duration,\r\n    });\r\n  }, 300);\r\n};\r\n\r\nexport const showSuccessMsg = (message = '', duration = 3, description = undefined) => {\r\n  notification.destroy();\r\n  if (handleShowMes) {\r\n    clearTimeout(handleShowMes);\r\n  }\r\n  handleShowMes = setTimeout(() => {\r\n    notification.success({\r\n      message,\r\n      description,\r\n      placement: 'bottomLeft',\r\n      duration,\r\n    });\r\n  }, 300);\r\n};\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const TEMP = \"\";\r\n\r\nconst FOOD = gql`\r\n  {\r\n    id\r\n    title\r\n    name\r\n    rating\r\n    price\r\n    quantityType\r\n    createdAt\r\n  }\r\n`;\r\n\r\nexport default FOOD;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const TEMP = \"\";\r\n\r\nconst FOOD_ORDER = gql`\r\n  {\r\n    id\r\n    food\r\n    quantity\r\n    createdAt\r\n    email\r\n    notes\r\n    status\r\n    price\r\n    destination\r\n  }\r\n`;\r\n\r\nexport default FOOD_ORDER;\r\n","// import axios from \"axios\";\r\n// import { CONFIG } from \"../../../Constants\";\r\n// import useSubsription from \"@apollo/react-hooks\";\r\nimport { UndoOutlined } from \"@ant-design/icons\";\r\nimport { useSubscription } from \"@apollo/client\";\r\nimport { Button } from \"antd\";\r\nimport gql from \"graphql-tag\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useRef } from \"react\";\r\nimport { showSuccessMsg } from \"../../../Utils/showNotification\";\r\nimport FOOD from \"../../Fragments/food\";\r\nimport FOOD_ORDER from \"../../Fragments/foodOrder\";\r\nimport USER from \"../../Fragments/user\";\r\n\r\nconst NEW_FOOD_ORDERS = gql`\r\n  subscription newFoodOrders {\r\n    newFoodOrders {\r\n      food {\r\n        ...${FOOD}\r\n      }\r\n      foodOrder {\r\n        ...${FOOD_ORDER}\r\n      }\r\n      user {\r\n        ...${USER}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SubscribeNewFoodOrders = (props) => {\r\n  const oldData = useRef();\r\n  const { data, loading } = useSubscription(NEW_FOOD_ORDERS);\r\n  const onClick = () => {\r\n    props.updateOrders();\r\n    oldData.current = data;\r\n  };\r\n  // console.log({ data, loading });\r\n  if (\r\n    data?.newFoodOrders &&\r\n    data?.newFoodOrders?.length !== 0 &&\r\n    !_.isEqual(data, oldData.current)\r\n  ) {\r\n    showSuccessMsg(\r\n      \"New food order(s) arrived!\",\r\n      undefined,\r\n      \"Press refresh to load more food order(s)\"\r\n    );\r\n    return (\r\n      <Button type=\"primary\" onClick={onClick} className={props.className}>\r\n        <UndoOutlined />\r\n      </Button>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nSubscribeNewFoodOrders.defaultProps = {\r\n  className: \"\",\r\n  updateOrders: () => {},\r\n  isShowBtn: false,\r\n};\r\nSubscribeNewFoodOrders.propTypes = {\r\n  className: PropTypes.string,\r\n  updateOrders: PropTypes.func,\r\n  isShowBtn: PropTypes.bool,\r\n};\r\n\r\nexport default SubscribeNewFoodOrders;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport _ from \"lodash\";\r\nimport InputTitle from \"../InputTitle\";\r\nimport { Radio, Drawer, Modal, Spin } from \"antd\";\r\nimport { CloseOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst RadioCT = (props) => {\r\n  const {\r\n    className,\r\n    data,\r\n    type,\r\n    title,\r\n    value,\r\n    textClass,\r\n    onChange,\r\n    titleClassName,\r\n    radioItemClassName,\r\n    name,\r\n    isObj,\r\n    loading,\r\n    disabled,\r\n  } = props;\r\n\r\n  let itemMagrinTop = \"mt18\";\r\n  let itemClassName = \"\";\r\n  let titleClass = titleClassName;\r\n  switch (type) {\r\n    case \"QUESTION\":\r\n      itemMagrinTop = \"mt8\";\r\n      itemClassName = \"question-item-normal\";\r\n      titleClass = \"question-title\";\r\n      break;\r\n    case \"SCORE\":\r\n      itemClassName = \"score-ct\";\r\n      itemMagrinTop = \"\";\r\n      break;\r\n    case \"BIG\":\r\n      itemClassName = \"big-margin\";\r\n      break;\r\n    case \"NONE\":\r\n      itemMagrinTop = \"mt12\";\r\n      itemClassName = \"fw-normal\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className={classnames(\"radio-ct\", className)}>\r\n      <InputTitle title={title} className={titleClass} />\r\n      {loading ? (\r\n        <div>\r\n          <Spin indicator={<LoadingOutlined spin />} />\r\n        </div>\r\n      ) : (\r\n        <Radio.Group\r\n          onChange={(e) => onChange(name, e.target.value)}\r\n          value={value}\r\n          disabled={disabled}\r\n        >\r\n          {isObj\r\n            ? _.map(data, (x, i) => (\r\n                <div\r\n                  key={i}\r\n                  className={classnames(\"radio-item\", radioItemClassName)}\r\n                >\r\n                  <Radio\r\n                    value={x}\r\n                    className={classnames(\r\n                      itemMagrinTop,\r\n                      itemClassName,\r\n                      textClass,\r\n                      x.content ? \"fw-600\" : \"\"\r\n                    )}\r\n                  >\r\n                    {x.title}\r\n                  </Radio>\r\n                  {x.content ? (\r\n                    <div className=\"radio-content\">\r\n                      <span>{x.content}</span>\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              ))\r\n            : _.map(data, (x, i) => (\r\n                <Radio key={x} value={x}>\r\n                  {x}\r\n                </Radio>\r\n              ))}\r\n        </Radio.Group>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nRadioCT.defaultProps = {\r\n  name: \"\",\r\n  className: \"\",\r\n  textClass: \"\",\r\n  titleClassName: \"\",\r\n  radioItemClassName: \"\",\r\n  onChange: () => {},\r\n  data: [],\r\n  // itemMagrinTop: 'mt18',\r\n  type: \"SCORE\",\r\n  title: \"\",\r\n  value: undefined,\r\n  isObj: false,\r\n  loading: false,\r\n  disabled: false,\r\n};\r\nRadioCT.propTypes = {\r\n  name: PropTypes.string,\r\n  className: PropTypes.string,\r\n  textClass: PropTypes.string,\r\n  titleClassName: PropTypes.string,\r\n  radioItemClassName: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  data: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.string),\r\n    PropTypes.arrayOf(PropTypes.shape()),\r\n  ]),\r\n  // itemMagrinTop: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.shape()]),\r\n  title: PropTypes.string,\r\n  type: PropTypes.string,\r\n  isObj: PropTypes.bool,\r\n  loading: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default RadioCT;\r\n","// import axios from \"axios\";\r\n// import { CONFIG } from \"../../../Constants\";\r\nimport gql from \"graphql-tag\";\r\nimport createClient from \"../../apolloClient\";\r\n\r\nconst CHANGE_ORDER_STATUS = gql`\r\n  mutation changeOrderStatus($status: String!, $orderId: ID!) {\r\n    changeOrderStatus(status: $status, orderId: $orderId) {\r\n      isSuccess\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst handeUpdateFoodOrderStatus = async (variables = {}) => {\r\n  try {\r\n    // const res = await axios({\r\n    //   method: \"PUT\",\r\n    //   url: `${CONFIG.APOLLO_HOST_URL}/api/foodorder/changeorderstatus`,\r\n    //   data: variables,\r\n    // });\r\n    // return res.data;\r\n    const client = await createClient();\r\n    const result = await client.mutate({\r\n      mutation: CHANGE_ORDER_STATUS,\r\n      variables,\r\n    });\r\n    const { changeOrderStatus } = result?.data;\r\n    return changeOrderStatus;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default handeUpdateFoodOrderStatus;\r\n","import handeUpdateFoodOrderStatus from \"../../../Apollo/Functions/Handle/handeUpdateFoodOrderStatus\";\r\n\r\nexport const a = \"\";\r\n\r\nexport const mutationChangeStatus = async (food = \"\", status = \"\") => {\r\n  const sendingData = {\r\n    status,\r\n    orderId: food,\r\n  };\r\n  try {\r\n    const res = await handeUpdateFoodOrderStatus(sendingData);\r\n    return res;\r\n  } catch (error) {\r\n    throw { isSuccess: false, message: error };\r\n  }\r\n};\r\n","import { CloseOutlined } from \"@ant-design/icons\";\r\nimport { Drawer } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { STATUS_ENUM } from \"../../../Constants/home\";\r\nimport { getPrice } from \"../../../Helpers\";\r\nimport { useMergeState } from \"../../../Helpers/customHooks\";\r\nimport RadioCT from \"../../Inputs/RadioCT\";\r\nimport { mutationChangeStatus } from \"./helper\";\r\nimport \"./_food-order-drawer.scss\";\r\n\r\nconst FoodOrderDrawer = (props) => {\r\n  const [state, setState] = useMergeState({\r\n    loading: false,\r\n  });\r\n  const { visible, className, data, onClose, onUpdateFoodOrder } = props;\r\n  const { date, status, foodOrderId, notes, destination } = data;\r\n  const { loading } = state;\r\n  const onChangeStatus = async (key, value) => {\r\n    if (!foodOrderId || !value) {\r\n      return;\r\n    }\r\n    setState({ loading: true });\r\n    try {\r\n      const res = await mutationChangeStatus(foodOrderId, value);\r\n      if (res.isSuccess) {\r\n        onUpdateFoodOrder(_.assign(props.data, { status: value }));\r\n      }\r\n      setState({ loading: false });\r\n    } catch (error) {\r\n      setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      title=\"Food order\"\r\n      placement=\"right\"\r\n      width={400}\r\n      closeIcon={<CloseOutlined className=\"color-gray-9\" />}\r\n      onClose={onClose}\r\n      visible={visible}\r\n      className=\"food-order-drawer\"\r\n      maskClosable={false}\r\n    >\r\n      <div className={classnames(\"food-order-drawer-wrapper\", className)}>\r\n        <div className=\"food-order-drawer-created-at\">\r\n          <span className=\"b mr-4\">Created at: </span>\r\n          <span>{moment(date).format(\"HH:mm, DD/MM/YY\")}</span>\r\n        </div>\r\n        <div className=\"food-order-drawer-total\">\r\n          <span className=\"b mr-4\">Total: </span>\r\n          <span>{data.total || \"\"}</span>\r\n        </div>\r\n\r\n        <RadioCT\r\n          data={STATUS_ENUM}\r\n          value={status}\r\n          title=\"Status:\"\r\n          titleClassName=\"b pos-re\"\r\n          className=\"mt-16 mb-16\"\r\n          onChange={onChangeStatus}\r\n          loading={loading}\r\n          disabled={!props.isEditable}\r\n        ></RadioCT>\r\n\r\n        <div className=\"mt-16\">\r\n          <span className=\"b\">Food list: </span>\r\n        </div>\r\n        {_.map(data.data || [], (x, i) => (\r\n          <div key={i} className=\"food-order-drawer-row\">\r\n            {`${i + 1}: ${x.name} - Price: ${getPrice(\r\n              x.price,\r\n              undefined,\r\n              \"\"\r\n            )} - Quantity: ${x.quantity}`}\r\n          </div>\r\n        ))}\r\n        <div className=\"mt-16\">\r\n          <span className=\"b\">Destination: </span>\r\n        </div>\r\n        <div className=\"food-order-drawer-notes\">{destination || \"\"}</div>\r\n        <div className=\"mt-16\">\r\n          <span className=\"b\">Notes: </span>\r\n        </div>\r\n        <div className=\"food-order-drawer-notes\">{notes || \"\"}</div>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n};\r\nFoodOrderDrawer.defaultProps = {\r\n  className: \"\",\r\n  data: {},\r\n  visible: false,\r\n  toggleClick: () => {},\r\n  onClose: () => {},\r\n  onUpdateFoodOrder: () => {},\r\n  isEditable: true,\r\n};\r\nFoodOrderDrawer.propTypes = {\r\n  className: PropTypes.string,\r\n  data: PropTypes.shape(),\r\n  toggleClick: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  onUpdateFoodOrder: PropTypes.func,\r\n  visible: PropTypes.bool,\r\n  isEditable: PropTypes.bool,\r\n};\r\n\r\nexport default FoodOrderDrawer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport _ from \"lodash\";\r\nimport { STATUS_ENUM } from \"../../../Constants/home\";\r\nimport \"./_display-status.scss\";\r\n\r\nconst DisplayStatus = (props) => {\r\n  const { className, cell } = props;\r\n  let color = \"--pending\";\r\n  switch (cell) {\r\n    case STATUS_ENUM[0]:\r\n      color = \"--pending\";\r\n      break;\r\n    case STATUS_ENUM[1]:\r\n      color = \"--on-going\";\r\n      break;\r\n    case STATUS_ENUM[2]:\r\n      color = \"--done\";\r\n      break;\r\n    case STATUS_ENUM[3]:\r\n      color = \"--cancel\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <div className={classnames(\"display-status\", className)}>\r\n      <span className={color}>{cell}</span>\r\n    </div>\r\n  );\r\n};\r\nDisplayStatus.defaultProps = {\r\n  className: \"\",\r\n  cell: \"\",\r\n};\r\nDisplayStatus.propTypes = {\r\n  className: PropTypes.string,\r\n  cell: PropTypes.string,\r\n};\r\n\r\nexport default DisplayStatus;\r\n","import classnames from \"classnames\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { useMergeState } from \"../../../Helpers/customHooks\";\r\nimport FoodOrderDrawer from \"../../Modals/FoodOrderDrawer\";\r\nimport DisplayStatus from \"../../UI/DisplayStatus\";\r\nimport AntdTable from \"../AntdTable\";\r\nimport \"./_customer-orders-table.scss\";\r\n\r\nconst CustomerOrdersTable = (props) => {\r\n  const [state, setState] = useMergeState({\r\n    foodOrderData: {},\r\n  });\r\n\r\n  const onUpdateFoodOrder = (foodOrderData) => {\r\n    setState({ foodOrderData });\r\n  };\r\n\r\n  const { className, data } = props; // index\r\n  //date, fetchHistory, status, notes\r\n  const { foodOrderData } = state;\r\n\r\n  const generateColumns = () => {\r\n    const columns = [\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        render: (cell) => moment(cell).format(\"HH:mm\"),\r\n      },\r\n      {\r\n        title: \"Username\",\r\n        dataIndex: \"username\",\r\n      },\r\n      {\r\n        title: \"Total\",\r\n        dataIndex: \"total\",\r\n      },\r\n      {\r\n        title: \"Address\",\r\n        dataIndex: \"address\",\r\n      },\r\n      {\r\n        title: \"Phone number\",\r\n        dataIndex: \"phone\",\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        dataIndex: \"status\",\r\n        render: (cell) => <DisplayStatus cell={cell}></DisplayStatus>,\r\n      },\r\n    ];\r\n    return columns;\r\n  };\r\n\r\n  const onRowClick = (rowIndex, record) => {\r\n    console.log({ record });\r\n    setState({ foodOrderData: record });\r\n  };\r\n\r\n  const onCloseFoodOrderDrawer = () => {\r\n    setState({ foodOrderData: {} });\r\n  };\r\n\r\n  return (\r\n    <div className={classnames(\"admin-order-table\", className)}>\r\n      {data.length === 0 ? (\r\n        <div className=\"no-data\">There is no data to display</div>\r\n      ) : (\r\n        <AntdTable\r\n          className=\"mt-16\"\r\n          rowKey=\"index\"\r\n          totalData={data}\r\n          columns={generateColumns()}\r\n          onRowClick={onRowClick}\r\n        ></AntdTable>\r\n      )}\r\n      <FoodOrderDrawer\r\n        visible={!_.isEmpty(foodOrderData)}\r\n        data={foodOrderData}\r\n        onClose={onCloseFoodOrderDrawer}\r\n        onUpdateFoodOrder={onUpdateFoodOrder}\r\n        isEditable={props.isEditable}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomerOrdersTable.defaultProps = {\r\n  className: \"\",\r\n  data: [],\r\n  date: undefined,\r\n  fetchHistory: () => {},\r\n  isShow: false,\r\n  status: \"\",\r\n  notes: \"\",\r\n  isEditable: true,\r\n};\r\n\r\nCustomerOrdersTable.propTypes = {\r\n  className: PropTypes.string,\r\n  data: PropTypes.arrayOf(PropTypes.shape()),\r\n  date: PropTypes.string,\r\n  fetchHistory: PropTypes.func,\r\n  isShow: PropTypes.bool,\r\n  status: PropTypes.string,\r\n  notes: PropTypes.string,\r\n  isEditable: PropTypes.bool,\r\n};\r\n\r\nexport default CustomerOrdersTable;\r\n","// import axios from \"axios\";\r\n// import { CONFIG } from \"../../../Constants\";\r\nimport gql from \"graphql-tag\";\r\nimport createClient from \"../../apolloClient\";\r\nimport FOOD from \"../../Fragments/food\";\r\nimport FOOD_ORDER from \"../../Fragments/foodOrder\";\r\nimport USER from \"../../Fragments/user\";\r\n\r\nconst ORDER_HISTORY = gql`\r\n  query orderHistory($date: String!, $isAll: Boolean) {\r\n    orderHistory(date: $date, isAll: $isAll) {\r\n      food {\r\n        ...${FOOD}\r\n      }\r\n      foodOrder {\r\n        ...${FOOD_ORDER}\r\n      }\r\n      user {\r\n        ...${USER}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst fetchOrderHistory = async (variables = {}) => {\r\n  try {\r\n    // const res = await axios({\r\n    //   method: \"POST\",\r\n    //   url: `${CONFIG.APOLLO_HOST_URL}/api/foodorder/adminhistory`,\r\n    //   data: variables,\r\n    // });\r\n    // return res.data;\r\n    const client = await createClient();\r\n    const res = await client.query({\r\n      query: ORDER_HISTORY,\r\n      variables,\r\n    });\r\n    const { orderHistory } = res?.data || {};\r\n    // return res.data;\r\n    return orderHistory;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default fetchOrderHistory;\r\n","import moment from \"moment\";\r\nimport fetchOrderHistory from \"../../Apollo/Functions/Fetch/fetchOrderHistory\";\r\nimport { getOrderTotal } from \"../../Helpers\";\r\n\r\nexport const e = \"\";\r\n\r\nconst formatOrderHisData = (y, index) => ({\r\n  // index: index + 1,\r\n  name: y?.food?.name || \"\",\r\n  price: y?.foodOrder?.price || \"\",\r\n  food: y?.food?.id || \"\",\r\n  quantity: y?.foodOrder?.quantity || \"\",\r\n});\r\n\r\nexport const getOrderHistory = (res = [], addMore = 0) => {\r\n  const orderHistory = [];\r\n  const grouped = _.groupBy(res, (order) => order?.foodOrder?.createdAt);\r\n  // console.log({ grouped });\r\n  Object.keys(grouped).forEach((x, i) => {\r\n    const data = _.map(grouped[x], (y, index) => formatOrderHisData(y, index));\r\n    orderHistory.push({\r\n      index: i + addMore,\r\n      date: x,\r\n      data,\r\n      notes: grouped[x]?.[0]?.foodOrder?.notes || \"\",\r\n      destination: grouped[x]?.[0]?.foodOrder?.destination || \"\",\r\n      status: grouped[x]?.[0]?.foodOrder?.status || \"\",\r\n      username: grouped[x]?.[0]?.user?.username || \"\",\r\n      total: getOrderTotal(data),\r\n      address: grouped[x]?.[0]?.user?.address || \"\",\r\n      phone: grouped[x]?.[0]?.user?.phone || \"\",\r\n      user: grouped[x]?.[0]?.user || {},\r\n      foodOrderId: grouped[x]?.[0]?.foodOrder?.id || \"\",\r\n    });\r\n  });\r\n  return _.orderBy(orderHistory, [(x) => moment(x.date).valueOf()], [\"desc\"]);\r\n};\r\n\r\nexport const mutationGetFoodOrders = async (filterObj = {}) => {\r\n  const { currentDate, email } = filterObj;\r\n  const sendingData = {\r\n    date: moment(currentDate).format(\"DD/MM/YYYY\"),\r\n    email,\r\n  };\r\n  // console.log({ sendingData });\r\n  try {\r\n    const res = await fetchOrderHistory(sendingData);\r\n    return getOrderHistory(res);\r\n  } catch (error) {\r\n    console.log(\"Failed to get food orders: \", error);\r\n    return [];\r\n  }\r\n};\r\n","import classnames from \"classnames\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport SubscribeNewFoodOrders from \"../../Apollo/Functions/Subscribe/subscribeNewFoodOrders\";\r\nimport DatepickerCT from \"../../Components/Inputs/DatepickerCT\";\r\nimport CustomerOrdersTable from \"../../Components/Tables/CustomerOrdersTable\";\r\nimport Loading from \"../../Components/UI/Loading\";\r\nimport { useMergeState } from \"../../Helpers/customHooks\";\r\nimport { mutationGetFoodOrders } from \"./helper\";\r\nimport \"./_customer-orders.scss\";\r\n\r\nconst CustomerOrders = (props) => {\r\n  const [state, setState] = useMergeState({\r\n    data: [],\r\n    currentDate: moment(),\r\n    loading: true,\r\n  });\r\n  const { className, isAll } = props;\r\n  const { currentDate, data, loading } = state;\r\n\r\n  const getFoodOrders = async () => {\r\n    if (!currentDate) {\r\n      return;\r\n    }\r\n    setState({ loading: true });\r\n    try {\r\n      const res = await mutationGetFoodOrders({\r\n        currentDate,\r\n        isAll,\r\n      });\r\n      // console.log({ res });\r\n      setState({ data: res, loading: false });\r\n    } catch (error) {\r\n      setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFoodOrders();\r\n  }, [currentDate]);\r\n\r\n  const onChange = (key, value) => {\r\n    setState({ [key]: value });\r\n  };\r\n\r\n  return (\r\n    <div className={classnames(\"customer-orders\", className)}>\r\n      <div className=\"flex\">\r\n        <DatepickerCT\r\n          className=\"customer-orders-cur-date\"\r\n          placeholder=\"Choose date\"\r\n          value={currentDate}\r\n          onChange={onChange}\r\n          name=\"currentDate\"\r\n        ></DatepickerCT>\r\n\r\n        <div className=\"customer-orders-date\">\r\n          {moment(currentDate || undefined).format(\"dddd, MMMM DD, YYYY\")}\r\n        </div>\r\n\r\n        <SubscribeNewFoodOrders\r\n          className=\"ml-24\"\r\n          updateOrders={getFoodOrders}\r\n        ></SubscribeNewFoodOrders>\r\n      </div>\r\n\r\n      <CustomerOrdersTable\r\n        data={data}\r\n        isEditable={props.isAll}\r\n      ></CustomerOrdersTable>\r\n      {loading && <Loading></Loading>}\r\n    </div>\r\n  );\r\n};\r\nCustomerOrders.defaultProps = {\r\n  className: \"\",\r\n  isAll: false,\r\n};\r\nCustomerOrders.propTypes = {\r\n  className: PropTypes.string,\r\n  isAll: PropTypes.bool,\r\n};\r\n\r\nexport default CustomerOrders;\r\n","import classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport HomeHeader from \"../../Components/Pages/Home/HomeHeader\";\r\nimport auth from \"../../Helpers/auth\";\r\nimport CustomerOrders from \"../CustomerOrders\";\r\nimport \"./_history.scss\";\r\n\r\nconst History = (props) => {\r\n  const history = useHistory();\r\n  const { className } = props;\r\n\r\n  useEffect(() => {\r\n    if (!auth.isSuccess()) {\r\n      history?.push(\"/acestore\");\r\n      console.log(\"logout\");\r\n    }\r\n  }, [props.login]);\r\n\r\n  return (\r\n    <div className={classnames(\"history\", className)}>\r\n      <HomeHeader></HomeHeader>\r\n      <div className=\"history-body\">\r\n        <CustomerOrders isAll={false}></CustomerOrders>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nHistory.defaultProps = {\r\n  className: \"\",\r\n};\r\nHistory.propTypes = {\r\n  className: PropTypes.string,\r\n  login: PropTypes.shape().isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  login: state.login,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(History);\r\n","export default __webpack_public_path__ + \"static/media/star.90b70187.svg\";","export default __webpack_public_path__ + \"static/media/star-inactive.a4bed773.svg\";","import { Select } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useRef } from \"react\";\r\n// import Blue1BgRow from '../UI/blue1BgRow';\r\nimport InputTitle from \"../InputTitle\";\r\nimport \"./_select-ct.scss\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst SelectCT = (props) => {\r\n  const selectRef = useRef(undefined);\r\n\r\n  const {\r\n    className,\r\n    placeholder,\r\n    data,\r\n    title, // onChange,\r\n    showSearch,\r\n    defaultValue,\r\n    isValueOutside,\r\n    value,\r\n    mode,\r\n    suffixIcon,\r\n    name,\r\n    disabled,\r\n    isObject,\r\n  } = props;\r\n\r\n  const onChange = (value) => {\r\n    props.onChange(name, value);\r\n    selectRef.current.blur();\r\n  };\r\n\r\n  const onSearch = (value) => {\r\n    props.onSearch(name, value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"select-ct-wrapper\", className)}\r\n      key={`select-ct-wrapper-${props.name}`}\r\n    >\r\n      <InputTitle title={title} />\r\n\r\n      <Select\r\n        getPopupContainer={(trigger) => trigger.parentElement}\r\n        disabled={disabled}\r\n        ref={selectRef}\r\n        suffixIcon={suffixIcon}\r\n        mode={mode}\r\n        defaultValue={defaultValue}\r\n        value={\r\n          isValueOutside ? [] : isObject ? value?.label || undefined : value\r\n        }\r\n        showSearch={showSearch}\r\n        placeholder={placeholder}\r\n        optionFilterProp=\"children\"\r\n        onChange={onChange}\r\n        onSearch={showSearch ? onSearch : undefined}\r\n        filterOption={(input, option) =>\r\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n        }\r\n      >\r\n        {isObject\r\n          ? _.map(data, (x, i) => (\r\n              <Option key={i} value={x.label}>\r\n                {x.label}\r\n              </Option>\r\n            ))\r\n          : _.map(data, (x, i) => (\r\n              <Option key={i} value={x}>\r\n                {x}\r\n              </Option>\r\n            ))}\r\n      </Select>\r\n\r\n      {/* {\r\n        isValueOutside && (\r\n          <div className=\"select-ct-outside-res\">\r\n            {\r\n              _.map(value, (x, i) => (\r\n                <Blue1BgRow\r\n                  key={i}\r\n                  value={x}\r\n                  className=\"mt8\"\r\n                  onClick={() => props.onChange(name, x)}\r\n                  isShowDeleteButton\r\n                />\r\n              ))\r\n            }\r\n          </div>\r\n        )\r\n      } */}\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectCT.defaultProps = {\r\n  className: undefined,\r\n  title: \"\",\r\n  placeholder: \"Select...\",\r\n  data: [],\r\n  onChange: () => {},\r\n  onSearch: () => {},\r\n  showSearch: true,\r\n  defaultValue: undefined,\r\n  isValueOutside: false,\r\n  mode: undefined, // 'tags', // or multiple\r\n  value: [],\r\n  suffixIcon: undefined,\r\n  name: \"\",\r\n  disabled: false,\r\n  isObject: false,\r\n};\r\n\r\nSelectCT.propTypes = {\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  data: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.number),\r\n    PropTypes.arrayOf(PropTypes.string),\r\n    PropTypes.arrayOf(PropTypes.shape()),\r\n  ]),\r\n  onChange: PropTypes.func,\r\n  onSearch: PropTypes.func,\r\n  showSearch: PropTypes.bool,\r\n  defaultValue: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.string),\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ]),\r\n  isValueOutside: PropTypes.bool,\r\n  mode: PropTypes.string,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.string),\r\n    PropTypes.string,\r\n    PropTypes.shape(),\r\n    PropTypes.number,\r\n  ]),\r\n  suffixIcon: PropTypes.node,\r\n  name: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  isObject: PropTypes.bool,\r\n};\r\n\r\nexport default SelectCT;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport _ from \"lodash\";\r\n\r\nimport \"./_display-rating.scss\";\r\nimport starIc from \"../../../Images/Pages/Home/star.svg\";\r\nimport starInactiveIc from \"../../../Images/Pages/Home/star-inactive.svg\";\r\n\r\nconst DisplayRating = (props) => {\r\n  const { className, rating, onClick, isButton } = props;\r\n  const isDisabled = onClick === null;\r\n  const curNotAllowed = isDisabled ? \"cur-not-allowed\" : \"cur-pointer\";\r\n  return (\r\n    <div className={classnames(\"display-rating\", className)}>\r\n      {isButton ? (\r\n        <>\r\n          {_.map(_.range(rating), (x, i) => (\r\n            <button\r\n              className={`bas-btn ${curNotAllowed}`}\r\n              key={x}\r\n              onClick={() => onClick(i + 1)}\r\n              disabled={isDisabled}\r\n            >\r\n              <img src={starIc} alt=\"Star ic\" />\r\n            </button>\r\n          ))}\r\n          {_.map(_.range(5 - rating), (x, i) => (\r\n            <button\r\n              className={`bas-btn ${curNotAllowed}`}\r\n              key={x}\r\n              onClick={() => onClick(rating + i + 1)}\r\n              disabled={isDisabled}\r\n            >\r\n              <img src={starInactiveIc} alt=\"Star inactive ic\" />\r\n            </button>\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {_.map(_.range(rating), (x) => (\r\n            <img src={starIc} alt=\"Star ic\" key={x} className=\"mr-2\" />\r\n          ))}\r\n          {_.map(_.range(5 - rating), (x, i) => (\r\n            <img\r\n              src={starInactiveIc}\r\n              alt=\"Star ic\"\r\n              key={i}\r\n              className={4 - rating !== x ? \"mr-2\" : \"\"}\r\n            />\r\n          ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nDisplayRating.defaultProps = {\r\n  className: \"\",\r\n  onClick: () => {},\r\n  rating: 1,\r\n  isButton: false,\r\n};\r\nDisplayRating.propTypes = {\r\n  className: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  rating: PropTypes.number,\r\n  isButton: PropTypes.bool,\r\n};\r\n\r\nexport default DisplayRating;\r\n","import React, { useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  useMergeState,\r\n  useUpdateEffect,\r\n} from \"../../../../Helpers/customHooks\";\r\nimport \"./_filter-block.scss\";\r\nimport InputCT from \"../../../Inputs/InputCT\";\r\nimport starIc from \"../../../../Images/Pages/Home/star.svg\";\r\nimport starInactiveIc from \"../../../../Images/Pages/Home/star-inactive.svg\";\r\nimport SelectCT from \"../../../Inputs/SelectCT\";\r\nimport { MIN_MAX_PRICE } from \"../../../../Constants/home\";\r\nimport auth from \"../../../../Helpers/auth\";\r\nimport DisplayRating from \"../../../UI/DisplayRating\";\r\n\r\nconst FilterBlock = (props) => {\r\n  const filterRef = useRef(undefined);\r\n  const [state, setState] = useMergeState({\r\n    searchName: \"\",\r\n    rating: 0,\r\n    kind: undefined,\r\n    minPrice: undefined,\r\n    maxPrice: undefined,\r\n  });\r\n  const { className, onFilterFood } = props;\r\n  const onChange = (key, value) => {\r\n    setState({ [key]: value });\r\n  };\r\n\r\n  const onChangeStar = (rating = 0) => {\r\n    if (rating === state.rating) {\r\n      setState({ rating: 0 });\r\n      return;\r\n    }\r\n    setState({ rating });\r\n  };\r\n  const { searchName, rating, kind, minPrice, maxPrice } = state;\r\n\r\n  useUpdateEffect(() => {\r\n    if (filterRef.current) {\r\n      clearTimeout(filterRef.current);\r\n    }\r\n    filterRef.current = setTimeout(() => {\r\n      onFilterFood(state);\r\n    }, 200);\r\n  }, [searchName, rating, kind, minPrice, maxPrice]);\r\n\r\n  return (\r\n    <div className={classnames(\"filter-block\", className)}>\r\n      <div className=\"flex\">\r\n        <div className=\"filter-block-title\">Search:</div>\r\n        <InputCT\r\n          name=\"searchName\"\r\n          value={searchName}\r\n          onChange={onChange}\r\n          className=\"filter-block-search\"\r\n        />\r\n        <div className=\"filter-block-star\">Stars:</div>\r\n\r\n        <DisplayRating\r\n          rating={rating}\r\n          isButton\r\n          onClick={onChangeStar}\r\n          className=\"filter-block-star-dis\"\r\n        ></DisplayRating>\r\n        {/*\r\n        <Button\r\n          type=\"link\"\r\n          // onClick={onClickUsername}\r\n          className=\"home-header-username-btn\"\r\n        >\r\n          {username}\r\n        </Button>\r\n        */}\r\n      </div>\r\n      <div className=\"filter-block-row\">\r\n        <SelectCT\r\n          name=\"kind\"\r\n          value={kind}\r\n          onChange={onChange}\r\n          className=\"w-160\"\r\n          title=\"Kind of food:\"\r\n          data={auth.getKindOfFood() || []}\r\n        />\r\n        <SelectCT\r\n          name=\"minPrice\"\r\n          value={minPrice}\r\n          onChange={onChange}\r\n          title=\"Min price:\"\r\n          className=\"ml-48 w-160\"\r\n          type=\"NUMBER\"\r\n          data={_.filter(MIN_MAX_PRICE, (x) =>\r\n            maxPrice ? x < maxPrice : true\r\n          )}\r\n        />\r\n        <SelectCT\r\n          name=\"maxPrice\"\r\n          value={maxPrice}\r\n          onChange={onChange}\r\n          title=\"Max price:\"\r\n          className=\"ml-48 w-160\"\r\n          type=\"NUMBER\"\r\n          data={_.filter(MIN_MAX_PRICE, (x) =>\r\n            minPrice ? x > minPrice : true\r\n          )}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nFilterBlock.defaultProps = {\r\n  className: \"\",\r\n  onFilterFood: () => {},\r\n};\r\nFilterBlock.propTypes = {\r\n  className: PropTypes.string,\r\n  onFilterFood: PropTypes.func,\r\n};\r\n\r\nexport default FilterBlock;\r\n","import { Modal } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { getPrice } from \"../../../Helpers\";\r\nimport { useMergeState } from \"../../../Helpers/customHooks\";\r\nimport DisplayRating from \"../../UI/DisplayRating\";\r\nimport ModalHeader from \"../ModalHeader\";\r\nimport \"./_food-info-modal.scss\";\r\n\r\nconst FoodInfoModal = (props) => {\r\n  const { visible, className, toggleClick, loading, data } = props;\r\n  const { name, price, image, rating } = data;\r\n  return (\r\n    <Modal\r\n      className=\"food-info-modal\"\r\n      visible={visible}\r\n      closable={false}\r\n      footer={null}\r\n      destroyOnClose\r\n      centered\r\n      onCancel={toggleClick}\r\n    >\r\n      <div className={classnames(\"food-info-modal-wrapper\", className)}>\r\n        <ModalHeader title={name} onClick={toggleClick} />\r\n\r\n        <div className=\"food-info-modal-main\">\r\n          <img src={image} alt=\"Food card img\"></img>\r\n          <div className=\"fr-sb mt-16\">\r\n            <div className=\"flex\">\r\n              <span className=\"b\">Rating:</span>\r\n              <DisplayRating rating={rating} className=\"ml-4\"></DisplayRating>\r\n            </div>\r\n            <div className=\"flex\">\r\n              <span className=\"b\">Price:</span>\r\n              <span className=\"ml-4\">{getPrice(price, undefined, \"\")}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nFoodInfoModal.defaultProps = {\r\n  className: \"\",\r\n  data: {},\r\n  loading: false,\r\n  visible: false,\r\n  toggleClick: () => {},\r\n};\r\nFoodInfoModal.propTypes = {\r\n  className: PropTypes.string,\r\n  data: PropTypes.shape(),\r\n  toggleClick: PropTypes.func,\r\n  visible: PropTypes.bool,\r\n  loading: PropTypes.bool,\r\n};\r\n\r\nexport default FoodInfoModal;\r\n","import { Button } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {\r\n  PACKAGE_DATA,\r\n  QUANTITY_TYPES,\r\n  WEIGHT_DATA,\r\n} from \"../../../../Constants/home\";\r\nimport { getPrice } from \"../../../../Helpers\";\r\nimport {\r\n  useMergeState,\r\n  useUpdateEffect,\r\n} from \"../../../../Helpers/customHooks\";\r\nimport SelectCT from \"../../../Inputs/SelectCT\";\r\nimport FoodInfoModal from \"../../../Modals/FoodInfoModal\";\r\nimport DisplayRating from \"../../../UI/DisplayRating\";\r\nimport \"./_food-card.scss\";\r\n\r\nconst FoodCard = (props) => {\r\n  const [state, setState] = useMergeState({\r\n    name: props.name,\r\n    price: props.price,\r\n    rating: props.rating,\r\n    isBuy: props.isBuy,\r\n    quantity: props.quantity\r\n      ? props.quantity\r\n      : props.quantityType === QUANTITY_TYPES.WEIGHT\r\n      ? WEIGHT_DATA[0]\r\n      : PACKAGE_DATA[0],\r\n    quantityType: props.quantityType,\r\n    visibleFoodInfo: false,\r\n  });\r\n  const { className, quantityType, image, unit, onChangeCart } = props;\r\n  const { name, price, rating, isBuy, quantity, visibleFoodInfo } = state;\r\n\r\n  useUpdateEffect(() => {\r\n    onChangeCart(state);\r\n  }, [isBuy, quantity]);\r\n\r\n  useUpdateEffect(() => {\r\n    setState({ isBuy: props.isBuy });\r\n  }, [props.isBuy]);\r\n\r\n  const onChange = (key, value) => {\r\n    setState({ [key]: value });\r\n  };\r\n\r\n  const toggleIsBuy = () => {\r\n    setState({ isBuy: !isBuy });\r\n  };\r\n\r\n  const toggleVisibleFoodInfo = () => {\r\n    setState({ visibleFoodInfo: !visibleFoodInfo });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={classnames(\r\n          \"food-card\",\r\n          isBuy && \"food-card-active\",\r\n          className\r\n        )}\r\n      >\r\n        {image ? (\r\n          <div className=\"food-card-img\" onClick={toggleIsBuy}>\r\n            <img\r\n              src={image}\r\n              alt=\"Food card img\"\r\n              className=\"food-card-img-dis\"\r\n            ></img>\r\n          </div>\r\n        ) : (\r\n          <div className=\"food-card-img\" onClick={toggleIsBuy} />\r\n        )}\r\n\r\n        <div className=\"food-card-info\">\r\n          <div className=\"food-card-info-name\">{name}</div>\r\n\r\n          <div className=\"fr-sb\">\r\n            <div className=\"food-card-info-col\">\r\n              <div className=\"food-card-info-col-price\">\r\n                {getPrice(price, unit)}\r\n              </div>\r\n              <SelectCT\r\n                disabled={!isBuy}\r\n                name=\"quantity\"\r\n                showSearch={false}\r\n                className=\"mt-4\"\r\n                value={quantity}\r\n                onChange={onChange}\r\n                data={\r\n                  quantityType === QUANTITY_TYPES.WEIGHT\r\n                    ? WEIGHT_DATA\r\n                    : PACKAGE_DATA\r\n                }\r\n              />\r\n            </div>\r\n\r\n            <div className=\"food-card-info-col\">\r\n              <DisplayRating\r\n                rating={rating}\r\n                className=\"food-card-info-col-rating\"\r\n              ></DisplayRating>\r\n\r\n              <Button className=\"mt-10\" onClick={toggleVisibleFoodInfo}>\r\n                More info\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {isBuy && <div className=\"food-card-isbuy\">Buy</div>}\r\n      </div>\r\n\r\n      <FoodInfoModal\r\n        visible={visibleFoodInfo}\r\n        toggleClick={toggleVisibleFoodInfo}\r\n        data={{ name, rating, price, image }}\r\n      ></FoodInfoModal>\r\n    </div>\r\n  );\r\n};\r\nFoodCard.defaultProps = {\r\n  className: \"\",\r\n  name: \"\",\r\n  price: 0,\r\n  rating: 3,\r\n  isBuy: false,\r\n  quantity: \"\",\r\n  quantityType: QUANTITY_TYPES.WEIGHT,\r\n  image: \"\",\r\n  unit: \"VND\",\r\n  onChangeCart: () => {},\r\n};\r\nFoodCard.propTypes = {\r\n  className: PropTypes.string,\r\n  name: PropTypes.string,\r\n  price: PropTypes.number,\r\n  rating: PropTypes.number,\r\n  isBuy: PropTypes.bool,\r\n  quantity: PropTypes.string,\r\n  quantityType: PropTypes.string,\r\n  image: PropTypes.string,\r\n  unit: PropTypes.string,\r\n  onChangeCart: PropTypes.func,\r\n};\r\n\r\nexport default FoodCard;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport _ from \"lodash\";\r\nimport $ from \"jquery\";\r\nimport { Button } from \"antd\";\r\nimport FoodCard from \"../FoodCard\";\r\nimport { useMergeState } from \"../../../../Helpers/customHooks\";\r\nimport { findDOMNode } from \"react-dom\";\r\n\r\nconst FoodTable = (props) => {\r\n  const toggleRef = useRef(undefined);\r\n  const debounceRef = useRef(undefined);\r\n  const [state, setState] = useMergeState({\r\n    isShow: props.isShow,\r\n  });\r\n  const { className, data, title, onChangeCart } = props;\r\n  const { isShow } = state;\r\n\r\n  useEffect(() => {\r\n    if (!isShow) {\r\n      const el = findDOMNode(toggleRef.current);\r\n      $(el).slideUp(\"slow\");\r\n    }\r\n  }, []);\r\n\r\n  const toggleShow = () => {\r\n    if (debounceRef.current) {\r\n      clearTimeout(debounceRef.current);\r\n    }\r\n    debounceRef.current = setTimeout(() => {\r\n      const el = findDOMNode(toggleRef.current);\r\n      if (el) {\r\n        $(el).slideToggle(\"slow\");\r\n      }\r\n      setState({ isShow: !isShow });\r\n    }, 200);\r\n  };\r\n  // console.log({ data });\r\n\r\n  return (\r\n    <div className={classnames(\"food-table\", className)}>\r\n      <div className=\"food-table-title\">\r\n        <span>{title}</span>\r\n      </div>\r\n      <div ref={toggleRef}>\r\n        <div className=\"food-table-wrap\">\r\n          {_.map(data, (x, i) => (\r\n            <FoodCard\r\n              key={i}\r\n              {...x}\r\n              onChangeCart={(item) => onChangeCart(item, title)}\r\n              className=\"mr-24 mt-24\"\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"food-table-ender\" />\r\n      <Button type=\"link\" onClick={toggleShow} className=\"food-table-show-btn\">\r\n        {isShow ? \"Hide\" : \"Show\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nFoodTable.defaultProps = {\r\n  className: \"\",\r\n  data: [],\r\n  title: \"\",\r\n  onChangeCart: () => {},\r\n  isShow: false,\r\n};\r\nFoodTable.propTypes = {\r\n  className: PropTypes.string,\r\n  data: PropTypes.arrayOf(PropTypes.shape()),\r\n  title: PropTypes.string,\r\n  onChangeCart: PropTypes.func,\r\n  isShow: PropTypes.bool,\r\n};\r\n\r\nexport default FoodTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport _ from \"lodash\";\r\nimport { Button } from \"antd\";\r\n// import { useMergeState } from '../../../../Helpers/customHooks';\r\nimport { getPrice } from \"../../../../Helpers\";\r\n\r\nconst HomeTotal = (props) => {\r\n  // const [state, setState] = useMergeState({\r\n  //   data: [],\r\n  // });\r\n  const { className, total, onClickBuy, onClickReset } = props;\r\n  return (\r\n    <div className={classnames(\"home-total\", className)}>\r\n      <div className=\"fr-sb\">\r\n        <div className=\"home-total-title\">Total:</div>\r\n\r\n        <Button type=\"primary\" danger onClick={onClickReset} disabled={!total}>\r\n          Reset cart\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"home-total-price\">{getPrice(total, undefined, \"\")}</div>\r\n\r\n      <Button block type=\"primary\" onClick={onClickBuy} disabled={!total}>\r\n        Buy now\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nHomeTotal.defaultProps = {\r\n  className: \"\",\r\n  total: 0,\r\n  onClickBuy: () => {},\r\n  onClickReset: () => {},\r\n};\r\nHomeTotal.propTypes = {\r\n  className: PropTypes.string,\r\n  total: PropTypes.number,\r\n  onClickBuy: PropTypes.func,\r\n  onClickReset: PropTypes.func,\r\n};\r\n\r\nexport default HomeTotal;\r\n","import { Tag } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport auth from \"../../../../Helpers/auth\";\r\nimport { useMergeState } from \"../../../../Helpers/customHooks\";\r\nimport Loading from \"../../../UI/Loading\";\r\nimport FilterBlock from \"../FilterBlock\";\r\nimport FoodTable from \"../FoodTable\";\r\nimport HomeTotal from \"../HomeTotal\";\r\nimport { calcCartTotal, getFoodMasterData, handleFilterFood } from \"./helper\";\r\n\r\nconst HomeBody = (props) => {\r\n  const history = useHistory();\r\n  const [state, setState] = useMergeState({\r\n    foodData: auth.getFoodData().length !== 0 ? auth.getFoodData() : [], //_.cloneDeep([MOCKING_FOOD_TABLE])\r\n    arrImages: [],\r\n    loading: true,\r\n    rawFoodData: auth.getFoodData().length !== 0 ? auth.getFoodData() : [], //_.cloneDeep([MOCKING_FOOD_TABLE])\r\n  });\r\n\r\n  const fetchMenuData = async () => {\r\n    try {\r\n      const foodData = (await getFoodMasterData()) || [];\r\n      setState({ foodData, rawFoodData: foodData, loading: false });\r\n    } catch (error) {\r\n      setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (auth.getFoodData().length !== 0) {\r\n      setState({ loading: false });\r\n      return;\r\n    }\r\n    fetchMenuData();\r\n  }, []);\r\n\r\n  const { className } = props;\r\n  const { foodData, loading } = state;\r\n\r\n  const { cartTags, total } = calcCartTotal(foodData);\r\n\r\n  const onClickReset = () => {\r\n    const newFoodData = _.cloneDeep(foodData);\r\n    _.forEach(newFoodData, (x) => {\r\n      _.forEach(x.data || [], (y) => {\r\n        _.assign(y, { isBuy: false });\r\n      });\r\n    });\r\n    auth.setFoodData(undefined);\r\n    setState({ foodData: newFoodData });\r\n  };\r\n\r\n  const onClickBuy = () => {\r\n    history.push({\r\n      pathname: \"/food-order\",\r\n      state: foodData,\r\n    });\r\n    auth.setFoodData(foodData);\r\n  };\r\n\r\n  const onChangeCart = (item = {}, title = \"\") => {\r\n    // console.log({ item });\r\n    const { data } = _.find(foodData, (x) => x.title === title);\r\n    const cardTemp = _.find(data, (x) => x.name === item.name);\r\n    _.assign(cardTemp, { ...item });\r\n    // console.log({ foodData });\r\n    auth.setFoodData(foodData);\r\n    setState({ foodData });\r\n  };\r\n\r\n  const onFilterFood = (filterObject = {}) => {\r\n    setState({ foodData: [], loading: true });\r\n    setTimeout(() => {\r\n      const newFoodata = handleFilterFood(filterObject, state.rawFoodData);\r\n      // console.log({ newFoodata });\r\n      setState({ foodData: _.cloneDeep(newFoodata), loading: false });\r\n    }, 400);\r\n  };\r\n\r\n  const renderToper = () => (\r\n    <div className=\"home-body-toper\">\r\n      <FilterBlock onFilterFood={onFilterFood}></FilterBlock>\r\n      <HomeTotal\r\n        className=\"home-body-toper-block-3\"\r\n        total={total}\r\n        onClickReset={onClickReset}\r\n        onClickBuy={onClickBuy}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className={classnames(\"home-body\", className)}>\r\n        {renderToper()}\r\n\r\n        <div className=\"home-body-main\">\r\n          {cartTags.length !== 0 && (\r\n            <div className=\"home-body-cart-tag animation-fadein-2s\">\r\n              <div className=\"home-body-cart-tag-title\">\r\n                <span>Your cart:</span>\r\n              </div>\r\n\r\n              {_.map(cartTags, (x, i) => (\r\n                <Tag key={i} className=\"home-body-cart-tag-item\" color=\"orange\">\r\n                  {x}\r\n                </Tag>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {_.map(\r\n            foodData,\r\n            (x, i) =>\r\n              x.data.length !== 0 &&\r\n              x.title && (\r\n                <FoodTable\r\n                  className=\"animation-fadein-2s\"\r\n                  key={i}\r\n                  title={x.title}\r\n                  data={x.data}\r\n                  onChangeCart={onChangeCart}\r\n                  isShow={i === 0}\r\n                />\r\n              )\r\n          )}\r\n        </div>\r\n      </div>\r\n      {loading && <Loading></Loading>}\r\n    </div>\r\n  );\r\n};\r\nHomeBody.defaultProps = {\r\n  className: \"\",\r\n};\r\nHomeBody.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default HomeBody;\r\n","import classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nconst HomeFooter = (props) => {\r\n  const { className } = props;\r\n  return (\r\n    <div className={classnames(\"home-footer\", className)}>\r\n      <div className=\"home-footer-contact\">\r\n        <div className=\"b\">Contacts</div>\r\n        <div className=\"mt-2\">tttriet1997@gmail.com</div>\r\n        <a\r\n          href=\"https://www.facebook.com/profile.php?id=100015087697713\"\r\n          className=\"mt-2 fs-16\"\r\n          target=\"blank\"\r\n        >\r\n          Facebook\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"home-footer-address\">\r\n        <div className=\"b\">Address</div>\r\n        <div className=\"mt-2\">329 Lê Văn Lương, District.7, HCM city.</div>\r\n        <div className=\"mt-2\">(+84) 819 541 897 (Zalo)</div>\r\n      </div>\r\n\r\n      <div className=\"home-footer-copyright\">© 2021 - Acestore</div>\r\n    </div>\r\n  );\r\n};\r\nHomeFooter.defaultProps = {\r\n  className: \"\",\r\n};\r\nHomeFooter.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default HomeFooter;\r\n","import classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport subscribeNewFoodOrders from \"../../Apollo/Functions/Subscribe/subscribeNewFoodOrders\";\r\nimport HomeBody from \"../../Components/Pages/Home/HomeBody\";\r\nimport HomeFooter from \"../../Components/Pages/Home/HomeFooter\";\r\nimport HomeHeader from \"../../Components/Pages/Home/HomeHeader\";\r\n\r\nconst Home = (props) => {\r\n  const { className } = props;\r\n  return (\r\n    <div className={classnames(\"home\", className)}>\r\n      <HomeHeader />\r\n      {/* {subscribeNewFoodOrders()} */}\r\n\r\n      <HomeBody />\r\n\r\n      <HomeFooter />\r\n    </div>\r\n  );\r\n};\r\nHome.defaultProps = {\r\n  className: \"\",\r\n};\r\nHome.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal } from \"antd\";\r\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\r\nimport classnames from \"classnames\";\r\nimport \"./_confirm-modal.scss\";\r\n\r\nconst ConfirmModal = (props) => {\r\n  let title;\r\n  let content;\r\n  let leftBtnTitle;\r\n  let rightBtnTitle;\r\n  let isDanger = false;\r\n  const {\r\n    visible,\r\n    type,\r\n    className,\r\n    icon,\r\n    children,\r\n    toggleClick,\r\n    onClick,\r\n    loading,\r\n  } = props;\r\n  switch (type) {\r\n    case \"CLONE_ORDER\": {\r\n      title = \"Clone the order\";\r\n      content = \"Are you sure want to clone this order?\";\r\n      leftBtnTitle = \"Cancel\";\r\n      rightBtnTitle = \"Yes\";\r\n      break;\r\n    }\r\n    case \"SEND_VERIFY_CODE\": {\r\n      title = \"Send code\";\r\n      content = \"Are you sure want to send code?\";\r\n      leftBtnTitle = \"Cancel\";\r\n      rightBtnTitle = \"Yes\";\r\n      break;\r\n    }\r\n    case \"CHANGE_PASSWORD\": {\r\n      title = \"Change password\";\r\n      content = \"Are you sure want to change new password?\";\r\n      leftBtnTitle = \"Cancel\";\r\n      rightBtnTitle = \"Yes\";\r\n      break;\r\n    }\r\n    default: {\r\n      break;\r\n    }\r\n  }\r\n  return (\r\n    <Modal\r\n      className=\"modal-send-report\"\r\n      visible={visible}\r\n      closable={false}\r\n      footer={null}\r\n      destroyOnClose\r\n      centered\r\n    >\r\n      <div className={classnames(\"confirm-modal\", className)}>\r\n        <div className=\"confirm-modal-body\">\r\n          <div className=\"cl-body-row\">\r\n            {icon ? icon : <QuestionCircleOutlined className=\"row-icon\" />}\r\n\r\n            <div className=\"row-title\">\r\n              <span>{title}</span>\r\n            </div>\r\n          </div>\r\n\r\n          {content && (\r\n            <div className=\"cl-body-content\">\r\n              <span>{content}</span>\r\n            </div>\r\n          )}\r\n\r\n          {children}\r\n        </div>\r\n        <div className=\"confirm-modal-footer\">\r\n          <div className=\"cl-footer-buttons\">\r\n            <Button className=\"mr8\" onClick={toggleClick} disabled={loading}>\r\n              {leftBtnTitle}\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              danger={isDanger}\r\n              onClick={onClick}\r\n              loading={loading}\r\n            >\r\n              {rightBtnTitle}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nConfirmModal.defaultProps = {\r\n  className: undefined,\r\n  type: \"CLONE_ORDER\",\r\n  loading: false,\r\n  icon: undefined,\r\n  visible: false,\r\n  message: \"\",\r\n  rightBtnTitle: \"\",\r\n  children: null,\r\n  toggleClick: () => {},\r\n};\r\nConfirmModal.propTypes = {\r\n  className: PropTypes.string,\r\n  type: PropTypes.string,\r\n  toggleClick: PropTypes.func,\r\n  onClick: PropTypes.func.isRequired,\r\n  visible: PropTypes.bool,\r\n  loading: PropTypes.bool,\r\n  icon: PropTypes.node,\r\n  message: PropTypes.string,\r\n  rightBtnTitle: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\nexport default ConfirmModal;\r\n","import gql from \"graphql-tag\";\r\nimport createClient from \"../../apolloClient\";\r\n\r\nconst CHANGE_PASSWORD = gql`\r\n  mutation changePassword($password: String!, $newPassword: String!) {\r\n    changePassword(password: $password, newPassword: $newPassword) {\r\n      isSuccess\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst handleChangePassword = async (variables = {}) => {\r\n  try {\r\n    const client = await createClient();\r\n    const result = await client.mutate({\r\n      mutation: CHANGE_PASSWORD,\r\n      variables,\r\n    });\r\n    const { changePassword } = result?.data;\r\n    return changePassword;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default handleChangePassword;\r\n","import handleChangePassword from \"../../../Apollo/Functions/Handle/handleChangePassword\";\r\n\r\nexport const a = \"\";\r\n\r\nexport const mutationChangePassword = async (\r\n  password = \"\",\r\n  newPassword = \"\"\r\n) => {\r\n  let res;\r\n  try {\r\n    res = await handleChangePassword({ password, newPassword });\r\n    // console.log({ res });\r\n  } catch (error) {\r\n    console.log(\"Failed to change password: \", error);\r\n  }\r\n  if (res.isSuccess) {\r\n    alert(\"Successfully changing password!\");\r\n  } else {\r\n    alert(\"Unsuccessfully changing password!\");\r\n  }\r\n  return res;\r\n};\r\n","import { Button } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { useMergeState } from \"../../../Helpers/customHooks\";\r\nimport InputCT from \"../../Inputs/InputCT\";\r\nimport ConfirmModal from \"../../Modals/ConfirmModal\";\r\nimport { mutationChangePassword } from \"./helper\";\r\nimport \"./_change-user-password.scss\";\r\n\r\nconst ChangeUserPassword = (props) => {\r\n  const [state, setState] = useMergeState({\r\n    password: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n\r\n    passwordErr: \"\",\r\n    newPasswordErr: \"\",\r\n    confirmPasswordErr: \"\",\r\n\r\n    visibleChangePass: false,\r\n    loading: false,\r\n  });\r\n  const { className, onClickCancel } = props;\r\n  const {\r\n    password,\r\n    newPassword,\r\n    confirmPassword,\r\n    passwordErr,\r\n    newPasswordErr,\r\n    confirmPasswordErr,\r\n    visibleChangePass,\r\n    loading,\r\n  } = state;\r\n\r\n  const onChange = (key, value) => {\r\n    setState({\r\n      [key]: value,\r\n      confirmPasswordErr: \"\",\r\n      newPasswordErr: \"\",\r\n      passwordErr: \"\",\r\n    });\r\n  };\r\n\r\n  const toggleClickChangePass = () => {\r\n    if (password && password.length < 6) {\r\n      setState({ passwordErr: \"Password is too short\" });\r\n      return;\r\n    }\r\n    if (confirmPassword && confirmPassword !== newPassword) {\r\n      setState({ confirmPasswordErr: \"Confirm password doesn't match\" });\r\n      return;\r\n    }\r\n    if (newPassword && newPassword.length < 6) {\r\n      setState({ newPasswordErr: \"New password is too short\" });\r\n      return;\r\n    }\r\n    setState({ visibleChangePass: !visibleChangePass });\r\n  };\r\n\r\n  const onClickChangePass = async () => {\r\n    setState({ loading: true });\r\n    const res = await mutationChangePassword(password, newPassword);\r\n    if (res.isSuccess) {\r\n      onClickCancel();\r\n    }\r\n    setState({ loading: false, visibleChangePass: false });\r\n  };\r\n\r\n  return (\r\n    <div className={classnames(\"change-user-password\", className)}>\r\n      <div className=\"change-user-password-wrapper\">\r\n        <div className=\"change-user-password-editing\">\r\n          <InputCT\r\n            title=\"Current password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={onChange}\r\n            placeholder=\"Enter your password\"\r\n            errMes={passwordErr}\r\n            type=\"PASSWORD\"\r\n          />\r\n\r\n          <InputCT\r\n            className=\"mt-16\"\r\n            title=\"New password\"\r\n            name=\"newPassword\"\r\n            value={newPassword}\r\n            onChange={onChange}\r\n            placeholder=\"Enter your new password\"\r\n            errMes={newPasswordErr}\r\n            type=\"PASSWORD\"\r\n          />\r\n          <InputCT\r\n            className=\"mt-16\"\r\n            title=\"Confirm new password\"\r\n            name=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            onChange={onChange}\r\n            placeholder=\"Enter your new password again\"\r\n            errMes={confirmPasswordErr}\r\n            type=\"PASSWORD\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"handle-user-ui-btns\">\r\n        <Button className=\"mr-32\" onClick={onClickCancel} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={toggleClickChangePass}\r\n          loading={loading}\r\n          disabled={!password || !newPassword || !confirmPassword}\r\n        >\r\n          Change\r\n        </Button>\r\n      </div>\r\n      <ConfirmModal\r\n        type=\"CHANGE_PASSWORD\"\r\n        toggleClick={toggleClickChangePass}\r\n        onClick={onClickChangePass}\r\n        visible={visibleChangePass}\r\n      ></ConfirmModal>\r\n    </div>\r\n  );\r\n};\r\nChangeUserPassword.defaultProps = {\r\n  className: \"\",\r\n  email: \"\",\r\n  username: \"\",\r\n  phone: \"\",\r\n  address: \"\",\r\n  role: \"\",\r\n  gender: \"\",\r\n  dob: undefined,\r\n  onClickCancel: () => {},\r\n};\r\nChangeUserPassword.propTypes = {\r\n  className: PropTypes.string,\r\n  email: PropTypes.string,\r\n  username: PropTypes.string,\r\n  phone: PropTypes.string,\r\n  address: PropTypes.string,\r\n  role: PropTypes.string,\r\n  gender: PropTypes.string,\r\n  dob: PropTypes.shape(),\r\n  onClickCancel: PropTypes.func,\r\n};\r\n\r\nexport default ChangeUserPassword;\r\n","import { Button } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport \"./_display-user-info.scss\";\r\n\r\nconst DisplayUserInfo = (props) => {\r\n  const {\r\n    email,\r\n    username,\r\n    phone,\r\n    address,\r\n    role,\r\n    gender,\r\n    dob,\r\n    className,\r\n    isVerified,\r\n    onClickVerifyAccount,\r\n    onClickChangePass,\r\n    onClickChangeInfo,\r\n  } = props;\r\n\r\n  return (\r\n    <div className={classnames(\"display-user-info\", className)}>\r\n      <div className=\"fr-sb\">\r\n        <div className=\"flex\">\r\n          <span className=\"b mr-4\">Phone:</span>\r\n          <span>{phone}</span>\r\n        </div>\r\n        <div className=\"flex\">\r\n          <span className=\"b mr-4\">Role:</span>\r\n          <span>{role || \"Customer\"}</span>\r\n        </div>\r\n        <div className=\"flex\">\r\n          <span className=\"b mr-4\">Email:</span>\r\n          <span>{email}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"fr-sb\">\r\n        <div className=\"flex\">\r\n          <span className=\"b mr-4\">Address:</span>\r\n          <span>{address}</span>\r\n        </div>\r\n        <div className=\"flex\">\r\n          <span className=\"b mr-4\">Gender:</span>\r\n          <span>{gender}</span>\r\n        </div>\r\n        <div className=\"flex\">\r\n          <span className=\"b mr-4\">Username:</span>\r\n          <span>{username}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"fr-sb\">\r\n        <div className=\"flex\">\r\n          <span className=\"b mr-4\">DOB:</span>\r\n          <span>{dob}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"handle-user-ui-btns\">\r\n        {!isVerified && (\r\n          <Button\r\n            className=\"mr-32\"\r\n            type=\"dashed\"\r\n            onClick={onClickVerifyAccount}\r\n          >\r\n            Verify account\r\n          </Button>\r\n        )}\r\n        <Button className=\"mr-32\" onClick={onClickChangePass}>\r\n          Change password\r\n        </Button>\r\n\r\n        <Button type=\"primary\" onClick={onClickChangeInfo}>\r\n          Change info\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nDisplayUserInfo.defaultProps = {\r\n  className: \"\",\r\n  email: \"\",\r\n  username: \"\",\r\n  phone: \"\",\r\n  address: \"\",\r\n  role: \"\",\r\n  gender: \"\",\r\n  dob: \"\",\r\n  isVerified: false,\r\n  onClickVerifyAccount: () => {},\r\n  onClickChangePass: () => {},\r\n  onClickChangeInfo: () => {},\r\n};\r\nDisplayUserInfo.propTypes = {\r\n  className: PropTypes.string,\r\n  email: PropTypes.string,\r\n  username: PropTypes.string,\r\n  phone: PropTypes.string,\r\n  address: PropTypes.string,\r\n  role: PropTypes.string,\r\n  gender: PropTypes.string,\r\n  dob: PropTypes.string,\r\n  isVerified: PropTypes.bool,\r\n  onClickVerifyAccount: PropTypes.func,\r\n  onClickChangePass: PropTypes.func,\r\n  onClickChangeInfo: PropTypes.func,\r\n};\r\n\r\nexport default DisplayUserInfo;\r\n","// import axios from \"axios\";\r\n// import { CONFIG } from \"../../../Constants\";\r\nimport gql from \"graphql-tag\";\r\nimport createClient from \"../../apolloClient\";\r\nimport USER from \"../../Fragments/user\";\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateUser($profileInput: ProfileInput!) {\r\n    updateUser(profileInput: $profileInput) {\r\n      isSuccess\r\n      message\r\n      user{\r\n        ...${USER}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst handleUpdateUser = async (variables = {}) => {\r\n  try {\r\n    const client = await createClient();\r\n    const result = await client.mutate({\r\n      mutation: UPDATE_USER,\r\n      variables,\r\n    });\r\n    const { updateUser } = result?.data;\r\n    return updateUser;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default handleUpdateUser;\r\n","import moment from \"moment\";\r\nimport handleUpdateUser from \"../../../Apollo/Functions/Handle/handleUpdateUser\";\r\n\r\nexport const a = \"\";\r\n\r\nexport const mutationUpdateUser = async (data = {}) => {\r\n  const { email, username, gender, address, dob } = data;\r\n  const sendingData = {\r\n    email,\r\n    username,\r\n    gender,\r\n    address,\r\n    dob: moment(dob).toISOString(),\r\n  };\r\n  // console.log({ sendingData });\r\n  try {\r\n    const res = await handleUpdateUser({\r\n      profileInput: sendingData,\r\n    });\r\n    return res;\r\n  } catch (error) {\r\n    console.log(\"Failed to update user: \", error);\r\n    return { isSuccess: false, message: error };\r\n  }\r\n};\r\n","import { Button } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useRef } from \"react\";\r\nimport auth from \"../../../Helpers/auth\";\r\nimport { useMergeState } from \"../../../Helpers/customHooks\";\r\nimport { isValidEmail } from \"../../../Utils\";\r\nimport InputCT from \"../../Inputs/InputCT\";\r\nimport RadioCT from \"../../Inputs/RadioCT\";\r\nimport { mutationUpdateUser } from \"./helper\";\r\nimport \"./_edit-user-info.scss\";\r\n\r\nconst EditUserInfo = (props) => {\r\n  const originalData = useRef({\r\n    email: props.email,\r\n    username: props.username,\r\n    address: props.address,\r\n    dob: props.dob,\r\n    gender: props.gender,\r\n  });\r\n  const [state, setState] = useMergeState({\r\n    email: props.email,\r\n    username: props.username,\r\n    address: props.address,\r\n    dob: props.dob,\r\n    gender: props.gender,\r\n    usernameErr: \"\",\r\n    addressErr: \"\",\r\n    loading: false,\r\n  });\r\n  const { className, role, onClickCancel, phone } = props;\r\n  const {\r\n    email,\r\n    username,\r\n    address,\r\n    dob,\r\n    gender,\r\n\r\n    usernameErr,\r\n    phoneErr,\r\n    addressErr,\r\n    loading,\r\n  } = state;\r\n\r\n  const onChange = (key, value) => {\r\n    setState({\r\n      [key]: value,\r\n      usernameErr: \"\",\r\n      addressErr: \"\",\r\n    });\r\n  };\r\n\r\n  const onClickConfirm = async () => {\r\n    setState({ loading: true });\r\n    const res = await mutationUpdateUser(state);\r\n    // console.log({ res });\r\n    if (res.isSuccess) {\r\n      auth.setDatalogin(res.user);\r\n      alert(\"Successfully update user information!\");\r\n      onClickCancel();\r\n    } else {\r\n      alert(\"Failed to update user information, please try again!\");\r\n    }\r\n    setState({ loading: false });\r\n  };\r\n\r\n  return (\r\n    <div className={classnames(\"edit-user-info\", className)}>\r\n      <div className=\"edit-user-info-wrapper\">\r\n        <div className=\"edit-user-info-editing\">\r\n          <InputCT\r\n            title=\"Email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={onChange}\r\n            placeholder=\"Enter your email\"\r\n            errMes={isValidEmail(email) ? \"\" : \"Invalid email!\"}\r\n          />\r\n          <InputCT\r\n            title=\"Username\"\r\n            name=\"username\"\r\n            value={username}\r\n            onChange={onChange}\r\n            placeholder=\"Enter your username\"\r\n            errMes={usernameErr}\r\n            className=\"mt-16\"\r\n          />\r\n          <InputCT\r\n            title=\"Phone number\"\r\n            name=\"phone\"\r\n            value={phone}\r\n            onChange={onChange}\r\n            placeholder=\"Enter your phone number\"\r\n            className=\"mt-16\"\r\n            type=\"NUMBER\"\r\n            errMes={phoneErr}\r\n            allowLeadingZeros\r\n            prefix=\"+\"\r\n            maxLength={15}\r\n            disabled\r\n          />\r\n          <InputCT\r\n            title=\"Role\"\r\n            name=\"role\"\r\n            value={role}\r\n            onChange={onChange}\r\n            placeholder=\"Enter your role\"\r\n            className=\"mt-16\"\r\n            disabled\r\n          />\r\n          <InputCT\r\n            title=\"Address\"\r\n            name=\"address\"\r\n            value={address}\r\n            onChange={onChange}\r\n            placeholder=\"Enter your address\"\r\n            className=\"mt-16\"\r\n            errMes={addressErr}\r\n          />\r\n          <InputCT\r\n            type=\"DATE\"\r\n            title=\"Date of birth\"\r\n            name=\"dob\"\r\n            value={dob}\r\n            onChange={onChange}\r\n            placeholder=\"Enter your dob\"\r\n            className=\"mt-16\"\r\n            disabledDate=\"PAST\"\r\n          />\r\n          <RadioCT\r\n            data={[\"Male\", \"Female\", \"Other\"]}\r\n            value={gender}\r\n            name=\"gender\"\r\n            title=\"Gender\"\r\n            titleClassName=\"pos-re\"\r\n            className=\"mt-16\"\r\n            onChange={onChange}\r\n          ></RadioCT>\r\n        </div>\r\n      </div>\r\n      <div className=\"handle-user-ui-btns\">\r\n        <Button className=\"mr-32\" onClick={onClickCancel} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={onClickConfirm}\r\n          loading={loading}\r\n          disabled={_.isEqual(originalData.current, {\r\n            email,\r\n            username,\r\n            address,\r\n            dob,\r\n            gender,\r\n          })}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nEditUserInfo.defaultProps = {\r\n  className: \"\",\r\n  email: \"\",\r\n  username: \"\",\r\n  phone: \"\",\r\n  address: \"\",\r\n  role: \"\",\r\n  gender: \"\",\r\n  dob: undefined,\r\n  onClickCancel: () => {},\r\n};\r\nEditUserInfo.propTypes = {\r\n  className: PropTypes.string,\r\n  email: PropTypes.string,\r\n  username: PropTypes.string,\r\n  phone: PropTypes.string,\r\n  address: PropTypes.string,\r\n  role: PropTypes.string,\r\n  gender: PropTypes.string,\r\n  dob: PropTypes.oneOfType([PropTypes.shape(), PropTypes.string]),\r\n  onClickCancel: PropTypes.func,\r\n};\r\n\r\nexport default EditUserInfo;\r\n","import gql from \"graphql-tag\";\r\nimport createClient from \"../../apolloClient\";\r\n\r\nconst RESEND_VERIFIED_EMAIL = gql`\r\n  mutation resendVerifiedEmail {\r\n    resendVerifiedEmail {\r\n      isSuccess\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst handleSendVerifyCode = async (variables) => {\r\n  try {\r\n    const client = await createClient();\r\n    const result = await client.mutate({\r\n      mutation: RESEND_VERIFIED_EMAIL,\r\n      variables,\r\n    });\r\n    const { resendVerifiedEmail } = result?.data;\r\n    return resendVerifiedEmail;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default handleSendVerifyCode;\r\n","import gql from \"graphql-tag\";\r\nimport createClient from \"../../apolloClient\";\r\n\r\nconst VERIFIED_EMAIL = gql`\r\n  mutation verifiedEmail($verificationCode: String!) {\r\n    verifiedEmail(verificationCode: $verificationCode) {\r\n      isSuccess\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst handleVerifiedEmail = async (variables) => {\r\n  try {\r\n    const client = await createClient();\r\n    const result = await client.mutate({\r\n      mutation: VERIFIED_EMAIL,\r\n      variables,\r\n    });\r\n    const { verifiedEmail } = result?.data;\r\n    return verifiedEmail;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default handleVerifiedEmail;\r\n","import handleSendVerifyCode from \"../../../Apollo/Functions/Handle/handleSendVerifyCode\";\r\nimport handleVerifiedEmail from \"../../../Apollo/Functions/Handle/handleVerifiedEmail\";\r\n\r\nexport const mutationVerifiedEmail = async (verificationCode) => {\r\n  let res;\r\n  try {\r\n    res = await handleVerifiedEmail({ verificationCode });\r\n  } catch (error) {\r\n    console.log(\"Failed to verify code: \", error);\r\n  }\r\n  // console.log({ res });\r\n  if (res.isSuccess) {\r\n    alert(\"Verify code successfully!\");\r\n    return res;\r\n  } else {\r\n    alert(\"Verify code unsuccessfully!\");\r\n    return { isSuccess: false };\r\n  }\r\n};\r\n\r\nexport const mutationSendCode = async () => {\r\n  let res;\r\n  try {\r\n    res = await handleSendVerifyCode();\r\n  } catch (error) {\r\n    console.log(\"Failed to send verify code: \", error);\r\n  }\r\n  // console.log({ res });\r\n  if (res.isSuccess) {\r\n    alert(\"Send verify code successfully!\");\r\n    return res;\r\n  } else {\r\n    alert(\"Send verify code unsuccessfully!\");\r\n    return { isSuccess: false };\r\n  }\r\n};\r\n","import { Button } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport ReactCodeInput from \"react-verification-code-input\";\r\nimport auth from \"../../../Helpers/auth\";\r\nimport { useMergeState } from \"../../../Helpers/customHooks\";\r\nimport ConfirmModal from \"../../Modals/ConfirmModal\";\r\nimport { mutationSendCode, mutationVerifiedEmail } from \"./helper\";\r\nimport \"./_verify-account.scss\";\r\n\r\nconst VerifyAccount = (props) => {\r\n  const [state, setState] = useMergeState({\r\n    verifycationCode: \"\",\r\n    invalidCode: \"\",\r\n    countingTime: 30,\r\n    loading: false,\r\n    visibleSendCode: false,\r\n  });\r\n  const { className, onClickCancel } = props;\r\n  const {\r\n    verifycationCode,\r\n    invalidCode,\r\n    countingTime,\r\n    loading,\r\n    visibleSendCode,\r\n  } = state;\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (countingTime > 0) {\r\n        setState({ countingTime: countingTime - 1 });\r\n      }\r\n    }, 1000);\r\n  }, [state.countingTime]);\r\n\r\n  const onChange = (key, value) => {\r\n    setState({ [key]: value });\r\n  };\r\n\r\n  const onClickSendCode = async () => {\r\n    setState({ loading: true });\r\n    const res = await mutationSendCode();\r\n    const obj = { loading: false, visibleSendCode: false };\r\n    if (res.isSuccess) {\r\n      _.assign(obj, { countingTime: 60 });\r\n    }\r\n    setState(obj);\r\n  };\r\n\r\n  const toggleClickSendCode = () => {\r\n    setState({ visibleSendCode: !visibleSendCode });\r\n  };\r\n\r\n  const onClickVerify = async () => {\r\n    setState({ loading: true });\r\n    const res = await mutationVerifiedEmail(verifycationCode);\r\n    const obj = { loading: false };\r\n    if (res.isSuccess) {\r\n      auth.setDatalogin({ ...auth.getDataLogin(), isVerified: true });\r\n      onClickCancel();\r\n    }\r\n    setState(obj);\r\n  };\r\n\r\n  return (\r\n    <div className={classnames(\"verify-account\", className)}>\r\n      <div className=\"verify-account-wrapper\">\r\n        <div className=\"verify-account-editing\">\r\n          <div className=\"flex\">\r\n            <span className=\"b mr-4\">Email:</span>\r\n            <span>{props.email}</span>\r\n          </div>\r\n\r\n          <ReactCodeInput\r\n            autoFocus={false}\r\n            values={verifycationCode.split()}\r\n            type=\"number\"\r\n            className={invalidCode ? \"invalid-code\" : \"\"}\r\n            fieldWidth={32}\r\n            fieldHeight={40}\r\n            fields={6}\r\n            placeholder={[\"_\", \"_\", \"_\", \"_\", \"_\", \"_\"]}\r\n            onChange={(x) => onChange(\"verifycationCode\", x)}\r\n            title=\"Verify account\"\r\n            className=\"mt-16\"\r\n          />\r\n\r\n          {invalidCode ? (\r\n            <div className=\"div-incorrect-mes\">\r\n              <span>{invalidCode}</span>\r\n            </div>\r\n          ) : null}\r\n\r\n          <div className=\"verify-account-resend\">\r\n            <Button\r\n              type=\"link\"\r\n              className=\"mt-16\"\r\n              disabled={countingTime !== 0}\r\n              onClick={toggleClickSendCode}\r\n            >\r\n              {`Resend code ${countingTime !== 0 ? countingTime : \"\"}`}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"handle-user-ui-btns\">\r\n        <Button className=\"mr-32\" onClick={onClickCancel} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={onClickVerify}\r\n          loading={loading}\r\n          disabled={verifycationCode.length !== 6}\r\n        >\r\n          Verify\r\n        </Button>\r\n      </div>\r\n      <ConfirmModal\r\n        type=\"SEND_VERIFY_CODE\"\r\n        toggleClick={toggleClickSendCode}\r\n        onClick={onClickSendCode}\r\n        visible={visibleSendCode}\r\n      ></ConfirmModal>\r\n    </div>\r\n  );\r\n};\r\nVerifyAccount.defaultProps = {\r\n  className: \"\",\r\n  email: \"\",\r\n  username: \"\",\r\n  phone: \"\",\r\n  address: \"\",\r\n  role: \"\",\r\n  gender: \"\",\r\n  dob: undefined,\r\n  onClickCancel: () => {},\r\n};\r\nVerifyAccount.propTypes = {\r\n  className: PropTypes.string,\r\n  email: PropTypes.string,\r\n  username: PropTypes.string,\r\n  phone: PropTypes.string,\r\n  address: PropTypes.string,\r\n  role: PropTypes.string,\r\n  gender: PropTypes.string,\r\n  dob: PropTypes.shape(),\r\n  onClickCancel: PropTypes.func,\r\n};\r\n\r\nexport default VerifyAccount;\r\n","import classnames from \"classnames\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport auth from \"../../../Helpers/auth\";\r\nimport { useMergeState } from \"../../../Helpers/customHooks\";\r\nimport ChangeUserPassword from \"../ChangeUserPassword\";\r\nimport DisplayUserInfo from \"../DisplayUserInfo\";\r\nimport EditUserInfo from \"../EditUserInfo\";\r\nimport VerifyAccount from \"../VerifyAccount\";\r\nimport \"./_handle-user-ui.scss\";\r\n\r\nconst HandleUserUI = (props) => {\r\n  const [state, setState] = useMergeState({\r\n    type: \"DISPLAY\",\r\n  });\r\n  const { className } = props;\r\n  const { type } = state;\r\n  const { role, isVerified, email, username, phone, address, dob, gender } =\r\n    auth.getDataLogin();\r\n\r\n  const onClickCancel = () => {\r\n    setState({ type: \"DISPLAY\" });\r\n  };\r\n\r\n  const onClickChangeInfo = () => {\r\n    setState({ type: \"EDIT\" });\r\n  };\r\n\r\n  const onClickVerifyAccount = () => {\r\n    setState({ type: \"VERIFY\" });\r\n  };\r\n\r\n  const onClickChangePass = () => {\r\n    setState({ type: \"CHANGE_PASSWORD\" });\r\n  };\r\n\r\n  const renderView = () => {\r\n    switch (type) {\r\n      case \"EDIT\":\r\n        return (\r\n          <EditUserInfo\r\n            username={username}\r\n            email={email}\r\n            phone={phone}\r\n            address={address}\r\n            gender={gender}\r\n            dob={dob || undefined}\r\n            role={role}\r\n            onClickCancel={onClickCancel}\r\n          ></EditUserInfo>\r\n        );\r\n      case \"CHANGE_PASSWORD\":\r\n        return (\r\n          <ChangeUserPassword\r\n            onClickCancel={onClickCancel}\r\n          ></ChangeUserPassword>\r\n        );\r\n      case \"VERIFY\":\r\n        return (\r\n          <VerifyAccount\r\n            onClickCancel={onClickCancel}\r\n            email={email}\r\n          ></VerifyAccount>\r\n        );\r\n      default:\r\n        return (\r\n          <DisplayUserInfo\r\n            username={username}\r\n            email={email}\r\n            phone={phone}\r\n            address={address}\r\n            gender={gender}\r\n            dob={dob ? moment(dob).format(\"DD/MM/YYYY\") : \"\"}\r\n            role={role}\r\n            isVerified={isVerified}\r\n            onClickVerifyAccount={onClickVerifyAccount}\r\n            onClickChangePass={onClickChangePass}\r\n            onClickChangeInfo={onClickChangeInfo}\r\n          ></DisplayUserInfo>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classnames(\"handle-user-ui\", className)}>\r\n      {renderView()}\r\n    </div>\r\n  );\r\n};\r\nHandleUserUI.defaultProps = {\r\n  className: \"\",\r\n};\r\nHandleUserUI.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default HandleUserUI;\r\n","import { CloseOutlined, FileImageTwoTone } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  QUANTITY_TYPES,\r\n  QUANTITY_TYPES_ADD_FOOD,\r\n} from \"../../../../Constants/home\";\r\nimport auth from \"../../../../Helpers/auth\";\r\nimport { useMergeState } from \"../../../../Helpers/customHooks\";\r\nimport InputCT from \"../../../Inputs/InputCT\";\r\nimport InputTitle from \"../../../Inputs/InputTitle\";\r\nimport SelectCT from \"../../../Inputs/SelectCT\";\r\nimport DisplayRating from \"../../../UI/DisplayRating\";\r\nimport \"./_add-food.scss\";\r\n\r\nconst DEFAULT_DATA = {\r\n  image: undefined,\r\n  name: \"\",\r\n  nameErr: \"\",\r\n  price: \"\",\r\n  id: \"\",\r\n  priceErr: \"\",\r\n  title: \"\",\r\n  titleErr: \"\",\r\n  rating: 1,\r\n  quantityType: undefined,\r\n  quanityTypeErr: \"\",\r\n  displayingName: undefined,\r\n};\r\n\r\nconst AddFood = (props) => {\r\n  const menuRef = useRef([]);\r\n  const [state, setState] = useMergeState({\r\n    ...DEFAULT_DATA,\r\n  });\r\n\r\n  const { className, index, onChangeFood, onDeleteFood, type } = props;\r\n\r\n  const onChangeStar = (rating = 1) => {\r\n    if (rating !== state.rating) {\r\n      setState({ rating });\r\n      return;\r\n    }\r\n  };\r\n\r\n  const {\r\n    image,\r\n    name,\r\n    nameErr,\r\n    price,\r\n    priceErr,\r\n    title,\r\n    titleErr,\r\n    rating,\r\n    quantityType,\r\n    quanityTypeErr,\r\n    displayingName,\r\n    id,\r\n  } = state;\r\n\r\n  const inputId = `${type}-img-id-${index}`;\r\n  const isAdd = type === \"ADD\";\r\n  const isEdit = type === \"EDIT\";\r\n  const isDelete = type === \"DELETE\";\r\n  const curNotAllowed = isDelete ? \"cur-not-allowed\" : \"cur-pointer\";\r\n\r\n  useEffect(() => {\r\n    if (!isAdd) {\r\n      menuRef.current = auth.getMenu();\r\n    }\r\n  }, []);\r\n\r\n  const onClickReset = () => {\r\n    setIem();\r\n  };\r\n\r\n  const setIem = () => {\r\n    const item = _.find(\r\n      menuRef.current,\r\n      (x) => x.title + \".\" + x.name === displayingName\r\n    );\r\n    // console.log({ item });\r\n    if (!_.isEmpty(item)) {\r\n      setState({\r\n        ...item,\r\n        quantityType:\r\n          QUANTITY_TYPES_ADD_FOOD[\r\n            item.quantityType === QUANTITY_TYPES.WEIGHT ? 0 : 1\r\n          ],\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIem();\r\n  }, [displayingName]);\r\n\r\n  useEffect(() => {\r\n    onChangeFood(index, {\r\n      image,\r\n      name,\r\n      price,\r\n      title,\r\n      rating,\r\n      quantityType,\r\n      displayingName,\r\n      id,\r\n    });\r\n  }, [image, name, price, title, rating, quantityType, displayingName]);\r\n\r\n  const onChange = (key, value) => {\r\n    setState({\r\n      [key]: value,\r\n      nameErr: \"\",\r\n      priceErr: \"\",\r\n      titleErr: \"\",\r\n      quanityTypeErr: \"\",\r\n    });\r\n  };\r\n\r\n  const onClickDelete = () => {\r\n    onDeleteFood(index);\r\n  };\r\n\r\n  const onChangeImg = async (event = {}) => {\r\n    const file = event?.target?.files[0];\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = async () => {\r\n      const img = reader.result;\r\n      setState({ image: img });\r\n    };\r\n  };\r\n\r\n  const onClickImg = () => {\r\n    const e = document.getElementById(inputId);\r\n    if (e) {\r\n      e.click();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classnames(\"add-food\", className)}>\r\n      {!isAdd && (\r\n        <SelectCT\r\n          title=\"Food\"\r\n          name=\"displayingName\"\r\n          value={displayingName}\r\n          onChange={onChange}\r\n          placeholder=\"Select food name\"\r\n          data={_.map(auth.getMenu(), (x) => x.title + \".\" + x.name)}\r\n          className=\"mb-16\"\r\n        />\r\n      )}\r\n      {(displayingName || isAdd) && (\r\n        <div className=\"add-food-row\">\r\n          <div className=\"\">\r\n            {image ? (\r\n              <img\r\n                src={image}\r\n                alt=\"Food card img\"\r\n                className={`food-card-img ${curNotAllowed}`}\r\n                onClick={onClickImg}\r\n              />\r\n            ) : (\r\n              <div\r\n                className={`food-card-img ${curNotAllowed}`}\r\n                onClick={onClickImg}\r\n              >\r\n                <FileImageTwoTone />\r\n                <div className=\"food-card-img-text\">\r\n                  <span>Upload image</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <input\r\n              id={inputId}\r\n              type=\"file\"\r\n              onChange={onChangeImg}\r\n              className=\"dis-none\"\r\n              accept=\"image/png, .jpeg, .jpg, .webp\"\r\n              disabled={isDelete}\r\n            ></input>\r\n            <InputCT\r\n              className=\"mt-16\"\r\n              title=\"Food name\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={onChange}\r\n              placeholder=\"Enter your name\"\r\n              errMes={nameErr}\r\n              disabled={isDelete}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"add-food-name-price\">\r\n            <div className=\"fr-sb\">\r\n              <Button danger onClick={onClickReset}>\r\n                Reset\r\n              </Button>\r\n              {index !== 0 && (\r\n                <Button onClick={onClickDelete}>\r\n                  <CloseOutlined />\r\n                </Button>\r\n              )}\r\n            </div>\r\n            <SelectCT\r\n              className=\"mt-16\"\r\n              title=\"Kind of quanity\"\r\n              name=\"quantityType\"\r\n              value={quantityType}\r\n              onChange={onChange}\r\n              placeholder=\"Enter your quanity\"\r\n              errMes={quanityTypeErr}\r\n              data={QUANTITY_TYPES_ADD_FOOD}\r\n              disabled={isDelete}\r\n            />\r\n            <InputCT\r\n              className=\"mt-16\"\r\n              title=\"Food price\"\r\n              name=\"price\"\r\n              value={price}\r\n              onChange={onChange}\r\n              placeholder=\"Enter your price\"\r\n              errMes={priceErr}\r\n              type=\"NUMBER\"\r\n              disabled={isDelete}\r\n            />\r\n            <InputCT\r\n              className=\"mt-16\"\r\n              title=\"Kind of food\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={onChange}\r\n              placeholder=\"Enter kind of food\"\r\n              errMes={titleErr}\r\n              disabled={isDelete}\r\n            />\r\n            <InputTitle title=\"Rating\" className=\"mt-16\" />\r\n\r\n            <DisplayRating\r\n              rating={rating}\r\n              isButton\r\n              onClick={isDelete ? null : onChangeStar}\r\n            ></DisplayRating>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nAddFood.defaultProps = {\r\n  className: \"\",\r\n  index: 0,\r\n  data: {},\r\n  onChangeFood: () => {},\r\n  onDeleteFood: () => {},\r\n  type: \"ADD\",\r\n};\r\nAddFood.propTypes = {\r\n  className: PropTypes.string,\r\n  index: PropTypes.number,\r\n  data: PropTypes.shape(),\r\n  onChangeFood: PropTypes.func,\r\n  onDeleteFood: PropTypes.func,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default AddFood;\r\n","// import axios from \"axios\";\r\n// import { CONFIG } from \"../../../Constants\";\r\nimport gql from \"graphql-tag\";\r\nimport createClient from \"../../apolloClient\";\r\n\r\nconst ADD_FOOD = gql`\r\n  mutation addFood($input: [AddFoodInput]!) {\r\n    addFood(input: $input) {\r\n      isSuccess\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst handleAddFood = async (variables = {}) => {\r\n  try {\r\n    // const res = await axios({\r\n    //   method: isAdd ? \"POST\" : \"PUT\",\r\n    //   url: `${CONFIG.APOLLO_HOST_URL}/api/canteen/${\r\n    //     isAdd ? \"addfood\" : \"updatefood\"\r\n    //   }`,\r\n    //   data: variables,\r\n    // });\r\n    // return res.data;\r\n    const client = await createClient();\r\n    const result = await client.mutate({\r\n      mutation: ADD_FOOD,\r\n      variables,\r\n    });\r\n    const { addFood } = result?.data;\r\n    return addFood;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default handleAddFood;\r\n","// import axios from \"axios\";\r\n// import { CONFIG } from \"../../../Constants\";\r\nimport gql from \"graphql-tag\";\r\nimport createClient from \"../../apolloClient\";\r\n\r\nconst DELETE_FOOD = gql`\r\n  mutation deleteFood($input: [ID]!) {\r\n    deleteFood(input: $input) {\r\n      isSuccess\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst handleDeleteFood = async (variables = {}) => {\r\n  try {\r\n    // const res = await axios({\r\n    //   method: isAdd ? \"POST\" : \"PUT\",\r\n    //   url: `${CONFIG.APOLLO_HOST_URL}/api/canteen/${\r\n    //     isAdd ? \"addfood\" : \"updatefood\"\r\n    //   }`,\r\n    //   data: variables,\r\n    // });\r\n    // return res.data;\r\n    const client = await createClient();\r\n    const result = await client.mutate({\r\n      mutation: DELETE_FOOD,\r\n      variables,\r\n    });\r\n    const { deleteFood } = result?.data;\r\n    return deleteFood;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default handleDeleteFood;\r\n","// import axios from \"axios\";\r\n// import { CONFIG } from \"../../../Constants\";\r\nimport gql from \"graphql-tag\";\r\nimport createClient from \"../../apolloClient\";\r\n\r\nconst UPDATE_FOOD = gql`\r\n  mutation updateFood($input: [UpdateFoodInput]!) {\r\n    updateFood(input: $input) {\r\n      isSuccess\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst handleUpdateFood = async (variables = {}) => {\r\n  try {\r\n    // const res = await axios({\r\n    //   method: isAdd ? \"POST\" : \"PUT\",\r\n    //   url: `${CONFIG.APOLLO_HOST_URL}/api/canteen/${\r\n    //     isAdd ? \"addfood\" : \"updatefood\"\r\n    //   }`,\r\n    //   data: variables,\r\n    // });\r\n    // return res.data;\r\n    const client = await createClient();\r\n    const result = await client.mutate({\r\n      mutation: UPDATE_FOOD,\r\n      variables,\r\n    });\r\n    const { updateFood } = result?.data;\r\n    return updateFood;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default handleUpdateFood;\r\n","import _ from \"lodash\";\r\nimport handleAddFood from \"../../Apollo/Functions/Handle/handleAddFood\";\r\nimport handleDeleteFood from \"../../Apollo/Functions/Handle/handleDeleteFood\";\r\nimport handleUpdateFood from \"../../Apollo/Functions/Handle/handleUpdateFood\";\r\nimport { QUANTITY_TYPES, QUANTITY_TYPES_ADD_FOOD } from \"../../Constants/home\";\r\n\r\nconst formatFood = (x = {}, id = null) => {\r\n  const quantityType =\r\n    x.quantityType === QUANTITY_TYPES_ADD_FOOD[0]\r\n      ? QUANTITY_TYPES.WEIGHT\r\n      : QUANTITY_TYPES.PACKAGE;\r\n  const obj = {\r\n    title: x.title,\r\n    name: x.name,\r\n    rating: x.rating,\r\n    price: parseFloat(x.price),\r\n    quantityType,\r\n    image: x.image,\r\n  };\r\n  if (id) {\r\n    _.assign(obj, { id });\r\n  }\r\n  return obj;\r\n};\r\n\r\nexport const handleMutationAddFood = async (food = [], type = \"ADD\") => {\r\n  const isAdd = type === \"ADD\";\r\n  const isEdit = type === \"EDIT\";\r\n  // console.log({ food });\r\n  const sendingData = {};\r\n  switch (type) {\r\n    case \"ADD\":\r\n    case \"EDIT\":\r\n      _.assign(sendingData, {\r\n        input: _.map(food, (x) => formatFood(x, isAdd ? null : x.id)),\r\n      });\r\n      break;\r\n    default:\r\n      _.assign(sendingData, { input: _.map(food, (x) => x.id) });\r\n      break;\r\n  }\r\n  // console.log({ sendingData });\r\n  try {\r\n    const func = isAdd\r\n      ? handleAddFood\r\n      : isEdit\r\n      ? handleUpdateFood\r\n      : handleDeleteFood;\r\n    const res = await func(sendingData);\r\n    return res;\r\n  } catch (error) {\r\n    return { isSuccess: false, message: error };\r\n  }\r\n};\r\n\r\nexport const checkDisabledFoodList = (foodList = [], isDelete = false) => {\r\n  if (!foodList || foodList?.length === 0 || !foodList[0]) {\r\n    return true;\r\n  }\r\n  const res = _.find(\r\n    foodList,\r\n    (x) =>\r\n      !x ||\r\n      !x.name ||\r\n      !x.price ||\r\n      !x.title ||\r\n      !x.quantityType ||\r\n      (!x.image && !isDelete)\r\n  );\r\n  // console.log({ res });\r\n  return !!res;\r\n};\r\n","import { Button } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { getFoodMasterData } from \"../../Components/Pages/Home/HomeBody/helper\";\r\nimport AddFood from \"../../Components/Pages/User/AddFood\";\r\nimport Loading from \"../../Components/UI/Loading\";\r\nimport { useMergeState } from \"../../Helpers/customHooks\";\r\nimport { checkDisabledFoodList, handleMutationAddFood } from \"./helper\";\r\nimport \"./_handle-change-food.scss\";\r\n\r\nconst HandleChangeFood = (props) => {\r\n  const [state, setState] = useMergeState({\r\n    foodList: [undefined],\r\n    loading: false,\r\n  });\r\n  const { foodList, loading } = state;\r\n  const { className, type } = props;\r\n\r\n  const isAdd = type === \"ADD\";\r\n  const isEdit = type === \"EDIT\";\r\n  const isDelete = type === \"DELETE\";\r\n\r\n  const onClickNewFood = () => {\r\n    foodList.push(undefined);\r\n    setState({ foodList });\r\n  };\r\n\r\n  const onChangeFood = (index = 0, data = {}) => {\r\n    foodList[index] = data;\r\n    setState({ foodList });\r\n  };\r\n\r\n  const onDeleteFood = (index = 0) => {\r\n    foodList.splice(index, 1);\r\n    console.log({ onDeleteFood: foodList, index });\r\n    setState({ foodList });\r\n  };\r\n\r\n  const onClickAddFood = async () => {\r\n    setState({ loading: true });\r\n    const res = await handleMutationAddFood(foodList, type);\r\n    const obj = { loading: false };\r\n    if (res.isSuccess) {\r\n      alert(\r\n        isAdd\r\n          ? \"Successfully adding new food!\"\r\n          : isEdit\r\n          ? \"Successfully editting food!\"\r\n          : \"Successfully deleting food!\"\r\n      );\r\n      await getFoodMasterData();\r\n      _.assign(obj, { foodList: [undefined] });\r\n      setState({ foodList: [] });\r\n    } else {\r\n      alert(\r\n        isAdd\r\n          ? \"Failed to add new food: \"\r\n          : isEdit\r\n          ? \"Failed to edit food: \"\r\n          : \"Failed to delete food: \",\r\n        res.message\r\n      );\r\n    }\r\n    setTimeout(() => {\r\n      setState(obj);\r\n    }, 200);\r\n  };\r\n\r\n  const isDisabledBtn = checkDisabledFoodList(foodList, isDelete);\r\n\r\n  return (\r\n    <div className={classnames(\"handle-change-food\", className)}>\r\n      <div className=\"handle-change-food-add-food\">\r\n        {_.map(foodList, (x, i) => (\r\n          <AddFood\r\n            key={i}\r\n            index={i}\r\n            data={x}\r\n            onChangeFood={onChangeFood}\r\n            onDeleteFood={onDeleteFood}\r\n            className=\"animation-fadein-1s\"\r\n            type={type}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"handle-change-food-add-btns\">\r\n        <Button\r\n          type=\"dashed\"\r\n          onClick={onClickNewFood}\r\n          disabled={isDisabledBtn || loading}\r\n        >\r\n          {isAdd ? \"New food\" : \"Other food\"}\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          disabled={isDisabledBtn}\r\n          onClick={onClickAddFood}\r\n          loading={loading}\r\n        >\r\n          {isAdd ? \"Add food\" : isEdit ? \"Edit food\" : \"Delete food\"}\r\n        </Button>\r\n      </div>\r\n      {loading && <Loading></Loading>}\r\n    </div>\r\n  );\r\n};\r\nHandleChangeFood.defaultProps = {\r\n  className: \"\",\r\n  type: \"ADD\",\r\n};\r\nHandleChangeFood.propTypes = {\r\n  className: PropTypes.string,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default HandleChangeFood;\r\n","import { Tabs } from \"antd\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport HomeHeader from \"../../Components/Pages/Home/HomeHeader\";\r\nimport HandleUserUI from \"../../Components/UI/HandleUserUI\";\r\nimport auth from \"../../Helpers/auth\";\r\nimport { useMergeState } from \"../../Helpers/customHooks\";\r\nimport CustomerOrders from \"../CustomerOrders\";\r\nimport HandleChangeFood from \"../HandleChangeFood\";\r\nimport \"./_user.scss\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst TABS = {\r\n  ADD_FOOD: \"ADD_FOOD\",\r\n  EDIT_FOOD: \"EDIT_FOOD\",\r\n  DELETE_FOOD: \"DELETE_FOOD\",\r\n  FOOD_ORDER: \"FOOD_ORDER\",\r\n  USER_PROFILE: \"USER_PROFILE\",\r\n};\r\nconst { ADD_FOOD, EDIT_FOOD, DELETE_FOOD, FOOD_ORDER, USER_PROFILE } = TABS;\r\n\r\nconst User = (props) => {\r\n  const history = useHistory();\r\n  const [state, setState] = useMergeState({\r\n    activeTab: USER_PROFILE,\r\n  });\r\n  const { className } = props;\r\n  const { activeTab } = state;\r\n  const isAdmin = auth.getRole() === \"Admin\";\r\n\r\n  useEffect(() => {\r\n    if (!auth.isSuccess()) {\r\n      history.push(\"/acestore\");\r\n      console.log(\"logout\");\r\n    }\r\n  }, [props.login]);\r\n\r\n  const onChangeTab = (activeTab = \"\") => {\r\n    setState({ activeTab });\r\n  };\r\n\r\n  return (\r\n    <div className={classnames(\"user\", className)}>\r\n      <HomeHeader></HomeHeader>\r\n      <div className=\"user-body\">\r\n        <Tabs\r\n          activeKey={activeTab}\r\n          tabPosition=\"top\"\r\n          onChange={onChangeTab}\r\n          className=\"mt-12\"\r\n        >\r\n          <TabPane\r\n            tab={<div className=\"user-body-title\">User profile</div>}\r\n            key={USER_PROFILE}\r\n          >\r\n            <HandleUserUI className=\"user-body-profile\"></HandleUserUI>\r\n          </TabPane>\r\n          {isAdmin && (\r\n            <>\r\n              <TabPane\r\n                tab={<div className=\"user-body-title\">Add food</div>}\r\n                key={ADD_FOOD}\r\n              >\r\n                <HandleChangeFood></HandleChangeFood>\r\n              </TabPane>\r\n              <TabPane\r\n                tab={<div className=\"user-body-title\">Edit food</div>}\r\n                key={EDIT_FOOD}\r\n              >\r\n                <HandleChangeFood type=\"EDIT\"></HandleChangeFood>\r\n              </TabPane>\r\n              <TabPane\r\n                tab={<div className=\"user-body-title\">Delete food</div>}\r\n                key={DELETE_FOOD}\r\n              >\r\n                <HandleChangeFood type=\"DELETE\"></HandleChangeFood>\r\n              </TabPane>\r\n              <TabPane\r\n                tab={<div className=\"user-body-title\">Food orders</div>}\r\n                key={FOOD_ORDER}\r\n              >\r\n                <CustomerOrders isAll></CustomerOrders>\r\n              </TabPane>\r\n            </>\r\n          )}\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nUser.defaultProps = {\r\n  className: \"\",\r\n};\r\nUser.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  login: state.login,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User);\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Supergraphic from \"../Components/UI/Supergraphic\";\r\nimport APP_FLOW_ACTIONS, { MESSAGES } from \"../Constants\";\r\nimport auth from \"../Helpers/auth\";\r\nimport { useEmitter } from \"../Helpers/customHooks\";\r\nimport { logoutRequest } from \"../Redux/Actions/login\";\r\nimport reloadPageRequest from \"../Redux/Actions/reload\";\r\nimport FoodOrder from \"./FoodOrder\";\r\nimport History from \"./History\";\r\nimport Home from \"./Home\";\r\nimport User from \"./User\";\r\n\r\nconst Main = (props) => {\r\n  useEffect(() => {\r\n    window.onbeforeunload = () => {};\r\n    window.onload = () => {\r\n      props.reloadPageRequest();\r\n    };\r\n  }, []);\r\n\r\n  const loginRequestListener = useCallback(() => {\r\n    alert(MESSAGES.EXPIRED_TOKEN);\r\n    auth.logout();\r\n    props.logoutRequest();\r\n  }, []);\r\n\r\n  useEmitter(APP_FLOW_ACTIONS.LOGOUT_REQUEST, loginRequestListener, []);\r\n\r\n  return (\r\n    <main className=\"div-root\">\r\n      <Router>\r\n        <Supergraphic></Supergraphic>\r\n        <Switch>\r\n          <Route exact path=\"/acestore\" name=\"Home\" component={Home} />\r\n          <Route exact path=\"/history\" name=\"Home\" component={History} />\r\n          <Route exact path=\"/user\" name=\"Home\" component={User} />\r\n          <Route\r\n            exact\r\n            path=\"/food-order\"\r\n            name=\"Food Order\"\r\n            component={FoodOrder}\r\n          />\r\n          <Redirect path=\"/\" to={{ pathname: \"/acestore\" }} />\r\n          <Redirect path=\"*\" to={{ pathname: \"/acestore\" }} />\r\n        </Switch>\r\n      </Router>\r\n    </main>\r\n  );\r\n};\r\n\r\nMain.defaultProps = {};\r\n\r\nMain.propTypes = {\r\n  reloadPageRequest: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoading: state.isLoading,\r\n  logoutRequest: PropTypes.func.isRequired,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  reloadPageRequest,\r\n  logoutRequest,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import AppFlowActions from '../../Constants';\r\n\r\n/**\r\n * @param {*} data\r\n */\r\nexport default function reloadPageRequest() {\r\n  return ({ type: AppFlowActions.RELOAD_PAGE_REQUEST });\r\n}\r\n","import React, { Component } from 'react';\r\nimport Main from './Pages/main';\r\nimport 'antd/dist/antd.css';\r\nimport './Styles/style.scss';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return <Main />;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export default {\r\n  loading: {},\r\n  login: {},\r\n  bookings: [],\r\n  checkins: [],\r\n  foodMasterData: [],\r\n};\r\n","import AppFlowActions from '../../Constants';\r\nimport initialState from './initialState';\r\n\r\nconst login = (state = initialState.login, action) => {\r\n  switch (action.type) {\r\n    case AppFlowActions.LOGIN_COMPLETE:\r\n      return action.data;\r\n    case AppFlowActions.LOGOUT_COMPLETE:\r\n      return action;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default login;\r\n","import { combineReducers } from \"redux\";\r\nimport initialState from \"./initialState\";\r\nimport auth from \"../../Helpers/auth\";\r\nimport AppFlowActions from \"../../Constants\";\r\nimport login from \"./login\";\r\n\r\nconst appReducer = combineReducers({\r\n  login,\r\n});\r\n\r\nfunction rootReducer(state, action) {\r\n  if (action.type === AppFlowActions.LOGOUT_REQUEST) {\r\n    console.log(\"heare\");\r\n    auth.logout();\r\n    return initialState;\r\n  }\r\n\r\n  return appReducer(state, action);\r\n}\r\n\r\nexport default rootReducer;\r\n","import { put, call, take, fork } from \"redux-saga/effects\";\r\n\r\nimport _ from \"lodash\";\r\nimport auth from \"../../Helpers/auth\";\r\nimport AppFlowActions from \"../../Constants\";\r\n\r\n// import login from '../reducers/login';\r\n\r\nexport function* loginRequest() {\r\n  const INFINITE = true;\r\n  while (INFINITE) {\r\n    const request = yield take(AppFlowActions.LOGIN_REQUEST);\r\n    const { data } = request;\r\n    const result = {\r\n      isSuccess: true,\r\n      user: _.cloneDeep(data.user),\r\n      token: data.token,\r\n    };\r\n    // console.log({ result });\r\n    auth.login(result);\r\n    yield put({ type: AppFlowActions.LOGIN_COMPLETE, data: result });\r\n    // if (result.isSuccess === true) {\r\n    //   yield put({ type: AppFlowActions.GET_ALL_DATA_REQUEST });\r\n    // }\r\n  }\r\n}\r\n\r\nexport default function* loginFlow() {\r\n  yield fork(loginRequest);\r\n}\r\n","import { fork } from 'redux-saga/effects';\r\nimport loginFlow from './login';\r\n\r\nexport default function* root() {\r\n  yield fork(loginFlow);\r\n}\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    // Ignore write errors.\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from 'redux';\r\n\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from '../Reducers';\r\nimport rootSaga from '../Sagas';\r\nimport { loadState } from './localStorage';\r\n\r\nconst persistedState = loadState();\r\nconst configureStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  return {\r\n    ...createStore(\r\n      rootReducer,\r\n      persistedState,\r\n      applyMiddleware(sagaMiddleware),\r\n    ),\r\n    runSaga: sagaMiddleware.run(rootSaga),\r\n  };\r\n};\r\n\r\nexport default configureStore;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { sessionService } from \"redux-react-session\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport { client } from \"./Apollo/apolloClient\";\r\n\r\nimport App from \"./App\";\r\nimport configureStore from \"./Redux/Store\";\r\n\r\nconst store = configureStore();\r\nsessionService.initSessionService(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}